
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUEAND CADENA CARACTER COMA COMENTARIOLINEA COMENTARIOMULTILINEA DECREMENTO DIFERENTEQUE DIVISION ELSE ENTERO FALSE FLOTANTE IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NEGACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionsentencia : sentenciaIfasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicarelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : TRUElogica : FALSEexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfcondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,89,90,91,93,],[4,4,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,4,-11,4,-42,4,-45,4,-43,]),'IDENTIFICADOR':([0,2,3,5,6,7,8,9,12,13,14,15,16,17,18,44,64,68,84,85,86,87,89,90,91,93,],[10,10,-3,-5,-6,-7,-9,-10,22,-48,-49,-50,-51,-52,-2,-12,-8,-4,10,-11,10,-42,10,-45,10,-43,]),'IF':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,88,89,90,91,93,],[11,11,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,11,-11,11,-42,11,11,-45,11,-43,]),'TIPO_INT':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,89,90,91,93,],[13,13,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,13,-11,13,-42,13,-45,13,-43,]),'TIPO_FLOAT':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,89,90,91,93,],[14,14,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,14,-11,14,-42,14,-45,14,-43,]),'TIPO_BOOL':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,89,90,91,93,],[15,15,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,15,-11,15,-42,15,-45,15,-43,]),'TIPO_CHAR':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,89,90,91,93,],[16,16,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,16,-11,16,-42,16,-45,16,-43,]),'TIPO_STR':([0,2,3,5,6,7,8,9,18,44,64,68,84,85,86,87,89,90,91,93,],[17,17,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,17,-11,17,-42,17,-45,17,-43,]),'$end':([1,2,3,5,6,7,8,9,18,44,64,68,85,87,90,93,],[0,-1,-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,-11,-42,-45,-43,]),'LLAVE_DER':([3,5,6,7,8,9,18,44,64,68,85,86,87,90,91,92,93,],[-3,-5,-6,-7,-9,-10,-2,-12,-8,-4,-11,87,-42,-45,-44,93,-43,]),'PARENTESIS_IZQ':([4,11,19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[19,21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'IGUAL':([10,22,],[20,43,]),'MENOS':([19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[25,25,25,25,48,25,-20,-21,-34,-35,-32,-33,-38,-39,-40,25,48,-21,-20,48,-32,-33,25,48,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-18,48,48,-41,48,48,-15,-16,-17,48,-22,-23,-24,-25,-26,-27,48,48,48,]),'ENTERO':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FLOTANTE':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TRUE':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[30,30,41,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FALSE':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[31,31,42,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'CADENA':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CARACTER':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'NOT':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'PUNTO_Y_COMA':([22,26,27,28,29,30,31,32,33,34,36,46,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[44,-20,-21,-34,-35,-32,-33,-38,-39,-40,64,68,-18,-30,85,-41,-13,-14,-15,-16,-17,-19,-22,-23,-24,-25,-26,-27,-28,-29,-31,]),'PARENTESIS_DER':([24,26,27,28,29,30,31,32,33,34,37,38,39,41,42,45,62,63,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[46,-20,-21,-34,-35,-32,-33,-38,-39,-40,65,-46,-47,-32,-33,67,-18,-30,-41,-13,-14,-15,-16,-17,-19,-22,-23,-24,-25,-26,-27,-28,-29,-31,]),'MAS':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[47,-20,-21,-34,-35,-32,-33,-38,-39,-40,47,-21,-20,47,-32,-33,47,-18,47,47,-41,47,47,-15,-16,-17,47,-22,-23,-24,-25,-26,-27,47,47,47,]),'MULTIPLICACION':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[49,-20,-21,-34,-35,-32,-33,-38,-39,-40,49,-21,-20,49,-32,-33,49,49,49,49,-41,49,49,-15,-16,49,49,-22,-23,-24,-25,-26,-27,49,49,49,]),'DIVISION':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[50,-20,-21,-34,-35,-32,-33,-38,-39,-40,50,-21,-20,50,-32,-33,50,50,50,50,-41,50,50,-15,-16,50,50,-22,-23,-24,-25,-26,-27,50,50,50,]),'POTENCIA':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[51,-20,-21,-34,-35,-32,-33,-38,-39,-40,51,-21,-20,51,-32,-33,51,51,51,51,-41,51,51,-15,-16,None,51,-22,-23,-24,-25,-26,-27,51,51,51,]),'MODULO':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[52,-20,-21,-34,-35,-32,-33,-38,-39,-40,52,-21,-20,52,-32,-33,52,-18,52,52,-41,52,52,-15,-16,-17,52,-22,-23,-24,-25,-26,-27,52,52,52,]),'IGUALQUE':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[53,-20,-21,-34,-35,-32,-33,-38,-39,-40,53,-21,-20,53,-32,-33,53,53,53,53,-41,53,53,53,53,53,53,-22,-23,-24,-25,-26,-27,53,53,53,]),'DIFERENTEQUE':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[54,-20,-21,-34,-35,-32,-33,-38,-39,-40,54,-21,-20,54,-32,-33,54,54,54,54,-41,54,54,54,54,54,54,-22,-23,-24,-25,-26,-27,54,54,54,]),'MAYORQUE':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[55,-20,-21,-34,-35,-32,-33,-38,-39,-40,55,-21,-20,55,-32,-33,55,55,55,55,-41,55,55,55,55,55,55,55,55,-24,-25,-26,-27,55,55,55,]),'MAYORIGUALQUE':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[56,-20,-21,-34,-35,-32,-33,-38,-39,-40,56,-21,-20,56,-32,-33,56,56,56,56,-41,56,56,56,56,56,56,56,56,56,-25,56,-27,56,56,56,]),'MENORQUE':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[57,-20,-21,-34,-35,-32,-33,-38,-39,-40,57,-21,-20,57,-32,-33,57,57,57,57,-41,57,57,57,57,57,57,57,57,-24,-25,-26,-27,57,57,57,]),'MENORIGUALQUE':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[58,-20,-21,-34,-35,-32,-33,-38,-39,-40,58,-21,-20,58,-32,-33,58,58,58,58,-41,58,58,58,58,58,58,58,58,58,-25,58,-27,58,58,58,]),'AND':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[59,-20,-21,-34,-35,-32,-33,-38,-39,-40,59,-21,-20,59,-32,-33,59,-18,59,59,-41,59,59,-15,-16,-17,59,-22,-23,-24,-25,-26,-27,59,59,59,]),'OR':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[60,-20,-21,-34,-35,-32,-33,-38,-39,-40,60,-21,-20,60,-32,-33,60,-18,60,60,-41,60,60,-15,-16,-17,60,-22,-23,-24,-25,-26,-27,60,60,60,]),'XOR':([24,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,45,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[61,-20,-21,-34,-35,-32,-33,-38,-39,-40,61,-21,-20,61,-32,-33,61,-18,61,61,-41,61,61,-15,-16,-17,61,-22,-23,-24,-25,-26,-27,61,61,61,]),'LLAVE_IZQ':([65,88,],[84,89,]),'ELSE':([87,],[88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,84,89,],[2,86,91,]),'sentencia':([0,2,84,86,89,91,],[3,18,3,18,3,18,]),'declaracion':([0,2,84,86,89,91,],[5,5,5,5,5,5,]),'asignacion':([0,2,84,86,89,91,],[6,6,6,6,6,6,]),'sentenciaIf':([0,2,84,86,88,89,91,],[7,7,7,7,90,7,7,]),'declaracion_valor':([0,2,84,86,89,91,],[8,8,8,8,8,8,]),'declaracion_sin_valor':([0,2,84,86,89,91,],[9,9,9,9,9,9,]),'tipo':([0,2,84,86,89,91,],[12,12,12,12,12,12,]),'expresion':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[24,36,40,45,62,63,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,]),'relacional':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[26,26,39,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'logica':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[27,27,38,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresion_agrupada':([19,20,21,23,25,35,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'condicion':([21,],[37,]),'selse':([89,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',42),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',46),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',51),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',56),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',60),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',64),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',68),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',72),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',77),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',81),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',85),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',89),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',93),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',98),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',103),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',108),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',113),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',118),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',123),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',128),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',132),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',136),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',141),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',146),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',151),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',156),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',161),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',166),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',171),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',176),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',181),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',186),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',191),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',196),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',201),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',206),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',210),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',214),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',218),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',223),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',227),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',231),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',236),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',242),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',246),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',250),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',255),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',260),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',264),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',268),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',272),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',276),
]
