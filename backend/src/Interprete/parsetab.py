
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftMASMENOSleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUErightNOTleftXORANDAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA CONTINUE DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NEGACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE WHILE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencias : sentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionsentencia : sentenciaIfsentencia : BREAK PUNTO_Y_COMAsentencia : CONTINUE PUNTO_Y_COMAsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : IDENTIFICADORrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfsentencia : SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DERcases : cases casecases : casecase : CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcase : DEFAULT DOS_PUNTOS sentenciascondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[4,4,-3,-6,-7,-8,-22,-23,-2,-9,-10,4,4,-19,-20,-25,-21,-5,4,4,-24,4,4,-11,-61,4,-57,4,-13,4,4,4,4,4,-60,-12,4,-9,-58,]),'BREAK':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[8,8,-3,-6,-7,-8,-22,-23,-2,-9,-10,8,8,-19,-20,-25,-21,-5,8,8,-24,8,8,-11,-61,8,-57,8,-13,8,8,8,152,8,-60,-12,8,-9,-58,]),'CONTINUE':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[9,9,-3,-6,-7,-8,-22,-23,-2,-9,-10,9,9,-19,-20,-25,-21,-5,9,9,-24,9,9,-11,-61,9,-57,9,-13,9,9,9,9,9,-60,-12,9,-9,-58,]),'WHILE':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,93,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[10,10,-3,-6,-7,-8,-22,-23,-2,-9,-10,10,10,-19,-20,-25,117,-21,-5,10,10,-24,10,10,-11,-61,10,-57,10,-13,10,10,10,10,10,-60,-12,10,-9,-58,]),'FOR':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[11,11,-3,-6,-7,-8,-22,-23,-2,-9,-10,11,11,-19,-20,-25,-21,-5,11,11,-24,11,11,-11,-61,11,-57,11,-13,11,11,11,11,11,-60,-12,11,-9,-58,]),'DO':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[12,12,-3,-6,-7,-8,-22,-23,-2,-9,-10,12,12,-19,-20,-25,-21,-5,12,12,-24,12,12,-11,-61,12,-57,12,-13,12,12,12,12,12,-60,-12,12,-9,-58,]),'IDENTIFICADOR':([0,2,3,5,6,7,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,35,37,39,50,58,59,60,62,63,64,65,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,99,115,116,119,120,121,124,127,129,130,134,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[13,13,-3,-6,-7,-8,-22,-23,36,-68,-69,-70,-71,-72,-2,42,-9,-10,57,61,13,42,42,57,42,42,42,57,-14,-15,92,13,-19,-20,42,-25,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-21,-5,13,123,13,-24,13,57,42,13,-11,42,-61,13,-57,13,-13,13,13,13,13,13,-60,-12,13,-9,-58,]),'SWITCH':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[14,14,-3,-6,-7,-8,-22,-23,-2,-9,-10,14,14,-19,-20,-25,-21,-5,14,14,-24,14,14,-11,-61,14,-57,14,-13,14,14,14,14,14,-60,-12,14,-9,-58,]),'IF':([0,2,3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,146,147,148,149,150,151,153,155,156,],[17,17,-3,-6,-7,-8,-22,-23,-2,-9,-10,17,17,-19,-20,-25,-21,-5,17,17,-24,17,17,-11,-61,17,-57,17,-13,17,17,17,17,17,17,-60,-12,17,-9,-58,]),'TIPO_INT':([0,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[19,19,-3,-6,-7,-8,-22,-23,-2,-9,-10,19,19,19,-19,-20,-25,-21,-5,19,19,-24,19,19,-11,-61,19,-57,19,-13,19,19,19,19,19,-60,-12,19,-9,-58,]),'TIPO_FLOAT':([0,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[20,20,-3,-6,-7,-8,-22,-23,-2,-9,-10,20,20,20,-19,-20,-25,-21,-5,20,20,-24,20,20,-11,-61,20,-57,20,-13,20,20,20,20,20,-60,-12,20,-9,-58,]),'TIPO_BOOL':([0,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[21,21,-3,-6,-7,-8,-22,-23,-2,-9,-10,21,21,21,-19,-20,-25,-21,-5,21,21,-24,21,21,-11,-61,21,-57,21,-13,21,21,21,21,21,-60,-12,21,-9,-58,]),'TIPO_CHAR':([0,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[22,22,-3,-6,-7,-8,-22,-23,-2,-9,-10,22,22,22,-19,-20,-25,-21,-5,22,22,-24,22,22,-11,-61,22,-57,22,-13,22,22,22,22,22,-60,-12,22,-9,-58,]),'TIPO_STR':([0,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,70,94,99,115,119,120,121,129,130,136,139,140,141,143,144,145,147,148,149,150,151,153,155,156,],[23,23,-3,-6,-7,-8,-22,-23,-2,-9,-10,23,23,23,-19,-20,-25,-21,-5,23,23,-24,23,23,-11,-61,23,-57,23,-13,23,23,23,23,23,-60,-12,23,-9,-58,]),'$end':([0,1,2,3,5,6,7,15,16,24,26,27,64,65,70,94,99,120,130,136,140,143,150,151,156,],[-4,0,-1,-3,-6,-7,-8,-22,-23,-2,-9,-10,-19,-20,-25,-21,-5,-24,-11,-61,-57,-13,-60,-12,-58,]),'LLAVE_DER':([3,5,6,7,15,16,24,26,27,30,63,64,65,70,94,99,115,119,120,121,125,126,129,130,136,137,139,140,141,143,145,147,149,150,151,153,154,155,156,],[-3,-6,-7,-8,-22,-23,-2,-9,-10,-4,93,-19,-20,-25,-21,-5,-4,-4,-24,130,136,-63,140,-11,-61,-62,-4,-57,-4,-13,-65,151,-4,-60,-12,-59,156,-64,-58,]),'CASE':([3,5,6,7,15,16,24,26,27,64,65,70,94,99,118,120,125,126,130,136,137,139,140,143,145,150,151,155,156,],[-3,-6,-7,-8,-22,-23,-2,-9,-10,-19,-20,-25,-21,-5,127,-24,127,-63,-11,-61,-62,-4,-57,-13,-65,-60,-12,-64,-58,]),'DEFAULT':([3,5,6,7,15,16,24,26,27,64,65,70,94,99,118,120,125,126,130,136,137,139,140,143,145,150,151,155,156,],[-3,-6,-7,-8,-22,-23,-2,-9,-10,-19,-20,-25,-21,-5,128,-24,128,-63,-11,-61,-62,-4,-57,-13,-65,-60,-12,-64,-58,]),'PARENTESIS_IZQ':([4,10,11,14,17,25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,117,120,124,127,134,],[25,28,29,34,35,37,37,37,37,37,37,37,37,37,-14,-15,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-21,124,-24,37,37,37,]),'PUNTO_Y_COMA':([8,9,31,32,36,40,41,42,43,44,45,46,47,48,49,52,53,55,56,57,66,72,88,89,91,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,152,],[26,27,64,65,70,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-66,-67,-46,-47,-48,94,99,-31,-44,116,120,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,155,]),'LLAVE_IZQ':([12,90,95,96,131,146,],[30,115,118,119,141,149,]),'INCREMENTO':([13,123,],[31,132,]),'DECREMENTO':([13,123,],[32,133,]),'IGUAL':([13,36,61,92,123,],[33,69,33,69,134,]),'MENOS':([25,28,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,66,67,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,120,124,127,134,138,142,],[39,39,39,39,39,39,74,39,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,39,-34,-33,74,-46,-47,-35,39,-14,-15,74,74,39,74,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,74,-44,-21,74,-56,-26,-27,74,74,74,74,-36,-37,-38,-39,-40,-41,-42,74,-45,-24,39,39,39,74,74,]),'ENTERO':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[43,43,43,43,43,43,43,43,43,-14,-15,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-21,-24,43,43,43,]),'FLOTANTE':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[44,44,44,44,44,44,44,44,44,-14,-15,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-21,-24,44,44,44,]),'TRUE':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[45,55,45,45,55,45,45,45,55,-14,-15,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-21,-24,55,45,45,]),'FALSE':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[46,56,46,46,56,46,46,46,56,-14,-15,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-21,-24,56,46,46,]),'CADENA':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[47,47,47,47,47,47,47,47,47,-14,-15,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-21,-24,47,47,47,]),'CARACTER':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[48,48,48,48,48,48,48,48,48,-14,-15,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-21,-24,48,48,48,]),'NOT':([25,28,33,34,35,37,39,50,58,59,60,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,120,124,127,134,],[50,50,50,50,50,50,50,50,50,-14,-15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-21,-24,50,50,50,]),'PARENTESIS_DER':([38,40,41,42,43,44,45,46,47,48,49,51,52,53,55,56,57,67,68,71,88,89,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,122,132,133,135,142,],[72,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,90,-66,-67,-46,-47,-48,95,96,98,-31,-44,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,131,-16,-17,143,-18,]),'MAS':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[73,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,73,-46,-47,-35,73,73,73,73,-44,73,-56,-26,-27,73,73,73,73,-36,-37,-38,-39,-40,-41,-42,73,-45,73,73,]),'MULTIPLICACION':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[75,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,75,-46,-47,-35,75,75,75,75,-44,75,-56,-26,-27,-28,-29,75,75,-36,-37,-38,-39,-40,-41,-42,75,-45,75,75,]),'DIVISION':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[76,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,76,-46,-47,-35,76,76,76,76,-44,76,-56,-26,-27,-28,-29,76,76,-36,-37,-38,-39,-40,-41,-42,76,-45,76,76,]),'POTENCIA':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[77,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,77,-46,-47,-35,77,77,77,77,-44,77,-56,-26,-27,-28,-29,None,77,-36,-37,-38,-39,-40,-41,-42,77,-45,77,77,]),'MODULO':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[78,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,78,-46,-47,-35,78,78,78,-31,-44,78,-56,-26,-27,-28,-29,-30,78,-36,-37,-38,-39,-40,-41,-42,78,-45,78,78,]),'IGUALQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[79,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,79,-46,-47,-35,79,79,79,79,-44,79,-56,79,79,79,79,79,79,-36,-37,-38,-39,-40,-41,-42,79,-45,79,79,]),'DIFERENTEQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[80,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,80,-46,-47,-35,80,80,80,80,-44,80,-56,80,80,80,80,80,80,-36,-37,-38,-39,-40,-41,-42,80,-45,80,80,]),'MAYORQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[81,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,81,-46,-47,-35,81,81,81,81,-44,81,-56,81,81,81,81,81,81,81,81,-38,-39,-40,-41,-42,81,-45,81,81,]),'MAYORIGUALQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[82,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,82,-46,-47,-35,82,82,82,82,-44,82,-56,82,82,82,82,82,82,82,82,82,-39,82,-41,-42,82,-45,82,82,]),'MENORQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[83,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,83,-46,-47,-35,83,83,83,83,-44,83,-56,83,83,83,83,83,83,83,83,-38,-39,-40,-41,-42,83,-45,83,83,]),'MENORIGUALQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[84,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,84,-46,-47,-35,84,84,84,84,-44,84,-56,84,84,84,84,84,84,84,84,84,-39,84,-41,-42,84,-45,84,84,]),'AND':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[85,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,85,-46,-47,-35,85,85,85,85,85,85,-56,85,85,85,85,85,85,85,85,85,85,85,85,-42,85,-45,85,85,]),'OR':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[86,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,86,-46,-47,-35,86,86,86,-31,-44,86,-56,-26,-27,-28,-29,-30,86,-36,-37,-38,-39,-40,-41,-42,86,-45,86,86,]),'XOR':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,66,67,71,88,89,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,138,142,],[87,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,87,-46,-47,-35,87,87,87,87,87,87,-56,87,87,87,87,87,87,87,87,87,87,87,87,-42,87,-45,87,87,]),'DOS_PUNTOS':([40,41,42,43,44,45,46,47,48,49,88,89,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,128,138,],[-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-31,-44,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,139,144,]),'ELSE':([140,],[146,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,30,115,119,139,141,144,149,],[2,63,121,129,145,147,148,153,]),'sentencia':([0,2,30,63,115,119,121,129,139,141,144,145,147,148,149,153,],[3,24,3,24,3,3,24,24,3,3,3,24,24,24,3,24,]),'declaracion':([0,2,30,63,115,119,121,129,139,141,144,145,147,148,149,153,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,29,30,63,115,119,121,129,139,141,144,145,147,148,149,153,],[6,6,59,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'sentenciaIf':([0,2,30,63,115,119,121,129,139,141,144,145,146,147,148,149,153,],[7,7,7,7,7,7,7,7,7,7,7,7,150,7,7,7,7,]),'declaracion_valor':([0,2,29,30,63,115,119,121,129,139,141,144,145,147,148,149,153,],[15,15,60,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaracion_sin_valor':([0,2,30,63,115,119,121,129,139,141,144,145,147,148,149,153,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'tipo':([0,2,29,30,63,115,119,121,129,139,141,144,145,147,148,149,153,],[18,18,62,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expresion':([25,28,33,34,35,37,39,50,58,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,124,127,134,],[38,54,66,67,54,71,88,89,54,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,54,138,142,]),'relacional':([25,28,33,34,35,37,39,50,58,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,124,127,134,],[40,53,40,40,53,40,40,40,53,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,53,40,40,]),'logica':([25,28,33,34,35,37,39,50,58,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,124,127,134,],[41,52,41,41,52,41,41,41,52,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,52,41,41,]),'expresion_agrupada':([25,28,33,34,35,37,39,50,58,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,124,127,134,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'condicion':([28,35,58,124,],[51,68,91,135,]),'inicio_for':([29,],[58,]),'actualizacion':([116,],[122,]),'cases':([118,],[125,]),'case':([118,125,],[126,137,]),'selse':([149,],[154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',55),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',59),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',64),
  ('sentencias -> <empty>','sentencias',0,'p_sentencia_empty','parser.py',69),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',73),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',77),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',81),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',85),
  ('sentencia -> BREAK PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_break','parser.py',89),
  ('sentencia -> CONTINUE PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_continue','parser.py',94),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',99),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',104),
  ('sentencia -> DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DER','sentencia',8,'p_sentencia_do_while','parser.py',109),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',114),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',119),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',123),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',128),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',133),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',138),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',143),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',148),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',153),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',157),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',161),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',165),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',169),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',174),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',179),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',184),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',189),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',194),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',199),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',204),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',208),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',212),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',217),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',222),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',227),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',232),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',237),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',242),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',247),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',252),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',257),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',262),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',267),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',272),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',277),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',282),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',287),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',292),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',296),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',300),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',304),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',309),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',313),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',317),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',321),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',326),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',330),
  ('sentencia -> SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DER','sentencia',7,'p_sentencia_switch','parser.py',334),
  ('cases -> cases case','cases',2,'p_cases','parser.py',339),
  ('cases -> case','cases',1,'p_cases_unico','parser.py',345),
  ('case -> CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',6,'p_case','parser.py',351),
  ('case -> DEFAULT DOS_PUNTOS sentencias','case',3,'p_case_default','parser.py',356),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',361),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',366),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',371),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',375),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',379),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',383),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',387),
]
