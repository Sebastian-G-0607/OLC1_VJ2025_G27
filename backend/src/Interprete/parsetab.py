
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftXORrightNOTleftIGUALQUEDIFERENTEQUEMAYORQUEMENORQUEMAYORIGUALQUEMENORIGUALQUEleftMASMENOSleftMULTIPLICACIONDIVISIONnonassocPOTENCIArightUMENOSAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA CONTINUE CORCHETE_DER CORCHETE_IZQ COSENO DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO EXEC FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO INVERSION LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PROC PUNTO_Y_COMA SENO SHUFFLE SORT SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE VECTOR WHILE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencias : sentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : PROC IDENTIFICADOR PARENTESIS_IZQ params PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERparams : params COMA paramparams : paramparams : param : tipo DOS_PUNTOS IDENTIFICADORsentencia : EXEC IDENTIFICADOR PARENTESIS_IZQ args PARENTESIS_DER PUNTO_Y_COMAargs : args COMA argargs : argargs : arg : IDENTIFICADORarg : ENTEROarg : FLOTANTEarg : TRUEarg : FALSEarg : CADENAarg : CARACTERarg : acceso_vectorsentencia : declaracion_vectordeclaracion_vector : declaracion_vector_valordeclaracion_vector : declaracion_vector_sin_valordeclaracion_vector : declaracion_vector_sortdeclaracion_vector : declaracion_vector_shuffledeclaracion_vector_valor : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ vectores CORCHETE_DER PUNTO_Y_COMAdeclaracion_vector_valor : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ expresiones CORCHETE_DER PUNTO_Y_COMAdeclaracion_vector_sin_valor : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER PUNTO_Y_COMAdeclaracion_vector_sort : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL sort PUNTO_Y_COMAdeclaracion_vector_shuffle : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL shuffle PUNTO_Y_COMAdimensiones : dimensiones COMA dimensiondimensiones : dimensiondimension : ENTEROvectores : vectores COMA vectorvectores : vectorvector : CORCHETE_IZQ expresiones CORCHETE_DERvector : CORCHETE_IZQ vectores CORCHETE_DERasignacion_vector : IDENTIFICADOR indices IGUAL expresion PUNTO_Y_COMAexpresiones : expresiones COMA expresionexpresiones : expresionsentencia : declaracionsentencia : asignacionsentencia : asignacion_vectorsentencia : sentenciaIfsentencia : BREAK PUNTO_Y_COMAsentencia : CONTINUE PUNTO_Y_COMAsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : MENOS expresion %prec UMENOSexpresion : expresion POTENCIA expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion MAS expresionexpresion : expresion MENOS expresionrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : expresion AND expresionlogica : expresion OR expresionexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : acceso_vectorexpresion : SENO PARENTESIS_IZQ expresion PARENTESIS_DERexpresion : COSENO PARENTESIS_IZQ expresion PARENTESIS_DERexpresion : INVERSION PARENTESIS_IZQ expresion PARENTESIS_DERsort : SORT PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DERshuffle : SHUFFLE PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DERacceso_vector : IDENTIFICADOR indicesindices : indices indiceindices : indiceindice : CORCHETE_IZQ expresion CORCHETE_DERexpresion : IDENTIFICADORlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfsentencia : SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DERcases : cases casecases : casecase : CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcase : DEFAULT DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[4,4,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,4,-57,-58,4,-63,-59,-5,-40,4,4,-62,4,-11,4,4,4,-49,-109,4,-105,-6,4,-51,4,4,4,4,4,-108,-30,-50,-47,4,-47,-106,-31,-32,-28,-29,]),'PROC':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[5,5,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,5,-57,-58,5,-63,-59,-5,-40,5,5,-62,5,-11,5,5,5,-49,-109,5,-105,-6,5,-51,5,5,5,5,5,-108,-30,-50,-47,5,-47,-106,-31,-32,-28,-29,]),'EXEC':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[7,7,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,7,-57,-58,7,-63,-59,-5,-40,7,7,-62,7,-11,7,7,7,-49,-109,7,-105,-6,7,-51,7,7,7,7,7,-108,-30,-50,-47,7,-47,-106,-31,-32,-28,-29,]),'BREAK':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[13,13,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,13,-57,-58,13,-63,-59,-5,-40,13,13,-62,13,-11,13,13,13,-49,-109,13,-105,-6,13,-51,13,220,13,227,13,-108,-30,-50,-47,13,-47,-106,-31,-32,-28,-29,]),'CONTINUE':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[14,14,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,14,-57,-58,14,-63,-59,-5,-40,14,14,-62,14,-11,14,14,14,-49,-109,14,-105,-6,14,-51,14,14,14,14,14,-108,-30,-50,-47,14,-47,-106,-31,-32,-28,-29,]),'WHILE':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,138,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[15,15,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,15,-57,-58,15,-63,-59,171,-5,-40,15,15,-62,15,-11,15,15,15,-49,-109,15,-105,-6,15,-51,15,15,15,15,15,-108,-30,-50,-47,15,-47,-106,-31,-32,-28,-29,]),'FOR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[16,16,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,16,-57,-58,16,-63,-59,-5,-40,16,16,-62,16,-11,16,16,16,-49,-109,16,-105,-6,16,-51,16,16,16,16,16,-108,-30,-50,-47,16,-47,-106,-31,-32,-28,-29,]),'DO':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[17,17,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,17,-57,-58,17,-63,-59,-5,-40,17,17,-62,17,-11,17,17,17,-49,-109,17,-105,-6,17,-51,17,17,17,17,17,-108,-30,-50,-47,17,-47,-106,-31,-32,-28,-29,]),'IDENTIFICADOR':([0,2,3,5,7,8,9,10,11,12,19,20,21,22,23,24,27,28,29,30,31,32,33,34,38,41,43,44,45,46,47,48,49,52,54,69,71,72,74,77,85,86,87,89,90,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,141,144,165,166,168,169,170,173,175,179,182,184,187,190,192,194,195,199,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,231,236,237,238,243,244,245,246,252,257,259,],[6,6,-3,35,42,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,51,-116,-117,-118,-119,-120,-2,61,61,61,-47,-48,84,88,6,61,84,61,61,61,-57,-58,61,125,84,-52,-53,137,6,61,-63,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-59,174,-5,181,-40,125,6,186,6,-62,6,-11,6,84,61,6,6,-49,61,-109,6,-105,-6,6,-51,6,6,6,6,6,-108,-30,-50,-47,6,61,-47,-106,61,-31,-32,253,254,61,-28,-29,]),'SWITCH':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[18,18,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,18,-57,-58,18,-63,-59,-5,-40,18,18,-62,18,-11,18,18,18,-49,-109,18,-105,-6,18,-51,18,18,18,18,18,-108,-30,-50,-47,18,-47,-106,-31,-32,-28,-29,]),'IF':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,215,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[25,25,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,25,-57,-58,25,-63,-59,-5,-40,25,25,-62,25,-11,25,25,25,-49,-109,25,-105,-6,25,-51,25,25,25,25,25,25,-108,-30,-50,-47,25,-47,-106,-31,-32,-28,-29,]),'VECTOR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[26,26,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,26,-57,-58,26,-63,-59,-5,-40,26,26,-62,26,-11,26,26,26,-49,-109,26,-105,-6,26,-51,26,26,26,26,26,-108,-30,-50,-47,26,-47,-106,-31,-32,-28,-29,]),'TIPO_INT':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,90,95,122,144,164,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[28,28,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,28,28,28,28,-57,-58,28,-63,-59,-5,28,-40,28,28,-62,28,-11,28,28,28,-49,-109,28,-105,-6,28,-51,28,28,28,28,28,-108,-30,-50,-47,28,-47,-106,-31,-32,-28,-29,]),'TIPO_FLOAT':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,90,95,122,144,164,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[29,29,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,29,29,29,29,-57,-58,29,-63,-59,-5,29,-40,29,29,-62,29,-11,29,29,29,-49,-109,29,-105,-6,29,-51,29,29,29,29,29,-108,-30,-50,-47,29,-47,-106,-31,-32,-28,-29,]),'TIPO_BOOL':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,90,95,122,144,164,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[30,30,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,30,30,30,30,-57,-58,30,-63,-59,-5,30,-40,30,30,-62,30,-11,30,30,30,-49,-109,30,-105,-6,30,-51,30,30,30,30,30,-108,-30,-50,-47,30,-47,-106,-31,-32,-28,-29,]),'TIPO_CHAR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,90,95,122,144,164,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[31,31,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,31,31,31,31,-57,-58,31,-63,-59,-5,31,-40,31,31,-62,31,-11,31,31,31,-49,-109,31,-105,-6,31,-51,31,31,31,31,31,-108,-30,-50,-47,31,-47,-106,-31,-32,-28,-29,]),'TIPO_STR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,90,95,122,144,164,166,169,173,175,179,182,184,192,194,195,201,204,205,209,210,212,213,214,218,219,221,222,224,226,228,229,236,237,243,244,257,259,],[32,32,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,32,32,32,32,-57,-58,32,-63,-59,-5,32,-40,32,32,-62,32,-11,32,32,32,-49,-109,32,-105,-6,32,-51,32,32,32,32,32,-108,-30,-50,-47,32,-47,-106,-31,-32,-28,-29,]),'$end':([0,1,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,71,72,95,122,144,166,175,182,195,201,205,209,212,222,224,226,237,243,244,257,259,],[-4,0,-1,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,-57,-58,-63,-59,-5,-40,-62,-11,-49,-109,-105,-6,-51,-108,-30,-50,-106,-31,-32,-28,-29,]),'LLAVE_DER':([3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,90,95,122,144,166,169,173,175,179,182,184,188,189,192,194,195,201,202,205,209,210,212,218,221,222,224,226,228,229,230,236,237,243,244,257,259,],[-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-60,-61,-2,-47,-48,-4,-57,-58,138,-63,-59,-5,-40,-4,-4,-62,-4,-11,195,201,-111,205,209,-49,-109,-110,-105,-6,-4,-51,226,-4,-108,-30,-50,-113,-107,237,-112,-106,-31,-32,-28,-29,]),'PARENTESIS_IZQ':([4,15,16,18,25,34,35,38,41,42,45,48,49,52,54,58,59,60,69,74,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,171,174,175,187,190,199,231,234,235,238,252,],[34,45,46,48,49,52,70,52,52,77,52,52,52,52,52,114,115,116,52,52,52,-52,-53,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-59,187,193,-62,52,52,52,52,245,246,52,52,]),'INCREMENTO':([6,186,],[36,197,]),'DECREMENTO':([6,186,],[37,198,]),'IGUAL':([6,39,40,51,75,88,124,137,186,216,],[38,74,-91,94,-90,38,-92,94,199,223,]),'CORCHETE_IZQ':([6,26,39,40,61,75,84,117,124,125,223,231,238,250,],[41,50,41,-91,41,-90,41,41,-92,41,231,238,238,238,]),'PUNTO_Y_COMA':([13,14,36,37,40,51,55,56,57,61,62,63,64,65,66,67,68,73,75,79,80,82,83,84,97,113,117,118,123,124,136,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,176,177,178,216,220,227,232,233,249,251,261,262,],[43,44,71,72,-91,95,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,122,-90,-114,-115,-94,-95,-96,144,-64,-89,-76,166,-92,170,175,-104,-65,-66,-67,-68,-69,-80,-70,-71,-72,-73,-74,-75,-77,-78,-79,182,-84,-85,-86,224,228,236,243,244,257,259,-87,-88,]),'LLAVE_IZQ':([17,135,139,140,163,196,215,],[47,169,172,173,179,210,221,]),'CORCHETE_DER':([28,29,30,31,32,40,55,56,57,61,62,63,64,65,66,67,68,75,76,93,113,117,118,124,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,176,177,178,239,240,241,242,247,248,255,256,258,260,],[-116,-117,-118,-119,-120,-91,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,-90,124,141,-64,-89,-76,-92,-104,-65,-66,-67,-68,-69,-80,-70,-71,-72,-73,-74,-75,-77,-78,-79,-84,-85,-86,249,251,-37,-42,255,256,-38,-39,-36,-41,]),'DOS_PUNTOS':([28,29,30,31,32,40,55,56,57,61,62,63,64,65,66,67,68,75,113,117,118,121,124,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,176,177,178,191,203,],[-116,-117,-118,-119,-120,-91,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,-90,-64,-89,-76,165,-92,-104,-65,-66,-67,-68,-69,-80,-70,-71,-72,-73,-74,-75,-77,-78,-79,-84,-85,-86,204,213,]),'MENOS':([34,38,40,41,45,48,49,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,73,74,75,76,79,80,81,82,83,84,85,86,87,91,94,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,175,176,177,178,187,190,199,203,211,231,238,242,252,260,],[54,54,-91,54,54,54,54,54,102,54,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,54,102,54,-90,102,-82,-81,102,-94,-95,-93,54,-52,-53,102,54,102,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-64,54,54,54,-89,102,-59,102,-92,102,-104,-65,-66,-67,-68,-69,102,102,102,102,102,102,102,102,102,102,102,102,102,-62,-84,-85,-86,54,54,54,102,102,54,54,102,54,102,]),'SENO':([34,38,41,45,48,49,52,54,69,74,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,175,187,190,199,231,238,252,],[58,58,58,58,58,58,58,58,58,58,58,-52,-53,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-59,-62,58,58,58,58,58,58,]),'COSENO':([34,38,41,45,48,49,52,54,69,74,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,175,187,190,199,231,238,252,],[59,59,59,59,59,59,59,59,59,59,59,-52,-53,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-59,-62,59,59,59,59,59,59,]),'INVERSION':([34,38,41,45,48,49,52,54,69,74,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,175,187,190,199,231,238,252,],[60,60,60,60,60,60,60,60,60,60,60,-52,-53,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-59,-62,60,60,60,60,60,60,]),'ENTERO':([34,38,41,45,48,49,52,54,69,74,77,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,168,175,187,190,193,199,217,231,238,252,],[62,62,62,62,62,62,62,62,62,62,128,62,-52,-53,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-59,128,-62,62,62,208,62,208,62,62,62,]),'FLOTANTE':([34,38,41,45,48,49,52,54,69,74,77,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,168,175,187,190,199,231,238,252,],[63,63,63,63,63,63,63,63,63,63,129,63,-52,-53,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-59,129,-62,63,63,63,63,63,63,]),'TRUE':([34,38,41,45,48,49,52,54,69,74,77,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,168,175,187,190,199,231,238,252,],[64,64,64,82,64,82,64,64,64,64,130,82,-52,-53,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-59,130,-62,82,64,64,64,64,64,]),'FALSE':([34,38,41,45,48,49,52,54,69,74,77,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,168,175,187,190,199,231,238,252,],[65,65,65,83,65,83,65,65,65,65,131,83,-52,-53,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-59,131,-62,83,65,65,65,65,65,]),'CADENA':([34,38,41,45,48,49,52,54,69,74,77,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,168,175,187,190,199,231,238,252,],[66,66,66,66,66,66,66,66,66,66,132,66,-52,-53,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-59,132,-62,66,66,66,66,66,66,]),'CARACTER':([34,38,41,45,48,49,52,54,69,74,77,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,168,175,187,190,199,231,238,252,],[67,67,67,67,67,67,67,67,67,67,133,67,-52,-53,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-59,133,-62,67,67,67,67,67,67,]),'NOT':([34,38,41,45,48,49,52,54,69,74,85,86,87,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,122,175,187,190,199,231,238,252,],[69,69,69,69,69,69,69,69,69,69,69,-52,-53,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-59,-62,69,69,69,69,69,69,]),'PARENTESIS_DER':([40,53,55,56,57,61,62,63,64,65,66,67,68,70,75,77,78,79,80,82,83,84,91,92,96,113,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,180,181,183,185,197,198,200,206,207,208,211,225,253,254,],[-91,97,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,-9,-90,-14,135,-114,-115,-94,-95,-96,139,140,143,-64,-89,-76,163,-8,-92,-15,167,-13,-16,-17,-18,-19,-20,-21,-22,-104,-65,-66,-67,-68,-69,-80,-70,-71,-72,-73,-74,-75,-77,-78,-79,176,177,178,-84,-85,-86,-7,-10,-12,196,-54,-55,212,216,-34,-35,-56,-33,261,262,]),'POTENCIA':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,98,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,98,-90,98,-82,-81,98,-94,-95,-93,98,98,-64,-89,98,98,-92,98,-104,None,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-84,-85,-86,98,98,98,98,]),'MULTIPLICACION':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,99,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,99,-90,99,-82,-81,99,-94,-95,-93,99,99,-64,-89,99,99,-92,99,-104,-65,-66,-67,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-84,-85,-86,99,99,99,99,]),'DIVISION':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,100,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,100,-90,100,-82,-81,100,-94,-95,-93,100,100,-64,-89,100,100,-92,100,-104,-65,-66,-67,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-84,-85,-86,100,100,100,100,]),'MAS':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,101,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,101,-90,101,-82,-81,101,-94,-95,-93,101,101,-64,-89,101,101,-92,101,-104,-65,-66,-67,-68,-69,101,101,101,101,101,101,101,101,101,101,101,101,101,-84,-85,-86,101,101,101,101,]),'MODULO':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,103,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,103,-90,103,-82,-81,103,-94,-95,-93,103,103,-64,-89,-76,103,-92,103,-104,-65,-66,-67,-68,-69,103,-70,-71,-72,-73,-74,-75,-77,-78,-79,103,103,103,-84,-85,-86,103,103,103,103,]),'IGUALQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,104,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,104,-90,104,-82,-81,104,-94,-95,-93,104,104,-64,-89,104,104,-92,104,-104,-65,-66,-67,-68,-69,104,-70,-71,-72,-73,-74,-75,104,104,104,104,104,104,-84,-85,-86,104,104,104,104,]),'DIFERENTEQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,105,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,105,-90,105,-82,-81,105,-94,-95,-93,105,105,-64,-89,105,105,-92,105,-104,-65,-66,-67,-68,-69,105,-70,-71,-72,-73,-74,-75,105,105,105,105,105,105,-84,-85,-86,105,105,105,105,]),'MAYORQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,106,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,106,-90,106,-82,-81,106,-94,-95,-93,106,106,-64,-89,106,106,-92,106,-104,-65,-66,-67,-68,-69,106,-70,-71,-72,-73,-74,-75,106,106,106,106,106,106,-84,-85,-86,106,106,106,106,]),'MAYORIGUALQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,107,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,107,-90,107,-82,-81,107,-94,-95,-93,107,107,-64,-89,107,107,-92,107,-104,-65,-66,-67,-68,-69,107,-70,-71,-72,-73,-74,-75,107,107,107,107,107,107,-84,-85,-86,107,107,107,107,]),'MENORQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,108,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,108,-90,108,-82,-81,108,-94,-95,-93,108,108,-64,-89,108,108,-92,108,-104,-65,-66,-67,-68,-69,108,-70,-71,-72,-73,-74,-75,108,108,108,108,108,108,-84,-85,-86,108,108,108,108,]),'MENORIGUALQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,109,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,109,-90,109,-82,-81,109,-94,-95,-93,109,109,-64,-89,109,109,-92,109,-104,-65,-66,-67,-68,-69,109,-70,-71,-72,-73,-74,-75,109,109,109,109,109,109,-84,-85,-86,109,109,109,109,]),'XOR':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,110,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,110,-90,110,-82,-81,110,-94,-95,-93,110,110,-64,-89,-76,110,-92,110,-104,-65,-66,-67,-68,-69,110,-70,-71,-72,-73,-74,-75,-77,110,110,110,110,110,-84,-85,-86,110,110,110,110,]),'AND':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,111,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,111,-90,111,-82,-81,111,-94,-95,-93,111,111,-64,-89,-76,111,-92,111,-104,-65,-66,-67,-68,-69,111,-70,-71,-72,-73,-74,-75,-77,-78,111,111,111,111,-84,-85,-86,111,111,111,111,]),'OR':([40,53,55,56,57,61,62,63,64,65,66,67,68,73,75,76,79,80,81,82,83,84,91,96,113,117,118,123,124,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,176,177,178,203,211,242,260,],[-91,112,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,112,-90,112,-82,-81,112,-94,-95,-93,112,112,-64,-89,-76,112,-92,112,-104,-65,-66,-67,-68,-69,112,-70,-71,-72,-73,-74,-75,-77,-78,-79,112,112,112,-84,-85,-86,112,112,112,112,]),'COMA':([40,55,56,57,61,62,63,64,65,66,67,68,70,75,77,113,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,176,177,178,180,181,183,206,207,208,225,239,240,241,242,247,248,255,256,258,260,],[-91,-81,-82,-83,-93,-97,-98,-94,-95,-101,-102,-103,-9,-90,-14,-64,-89,-76,164,-8,-92,-15,168,-13,-16,-17,-18,-19,-20,-21,-22,-104,-65,-66,-67,-68,-69,-80,-70,-71,-72,-73,-74,-75,-77,-78,-79,-84,-85,-86,-7,-10,-12,217,-34,-35,-33,250,252,-37,-42,252,250,-38,-39,-36,-41,]),'CASE':([172,188,189,202,228,236,],[190,190,-111,-110,-113,-112,]),'DEFAULT':([172,188,189,202,228,236,],[191,191,-111,-110,-113,-112,]),'ELSE':([205,],[215,]),'SORT':([223,],[234,]),'SHUFFLE':([223,],[235,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,47,169,173,179,204,210,213,221,],[2,90,184,192,194,214,218,219,229,]),'sentencia':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[3,33,3,33,3,3,3,33,33,33,3,3,3,33,33,33,3,33,]),'declaracion_vector':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'declaracion':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asignacion':([0,2,46,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[10,10,86,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'asignacion_vector':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'sentenciaIf':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,215,218,219,221,229,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,222,12,12,12,12,]),'declaracion_vector_valor':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'declaracion_vector_sin_valor':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'declaracion_vector_sort':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'declaracion_vector_shuffle':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'declaracion_valor':([0,2,46,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[23,23,87,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'declaracion_sin_valor':([0,2,47,90,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'tipo':([0,2,46,47,50,70,90,164,169,173,179,184,192,194,204,210,213,214,218,219,221,229,],[27,27,89,27,93,121,27,121,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indices':([6,61,84,125,],[39,117,117,117,]),'indice':([6,39,61,84,117,125,],[40,75,40,40,75,40,]),'expresion':([34,38,41,45,48,49,52,54,69,74,85,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,187,190,199,231,238,252,],[53,73,76,81,91,81,96,113,118,123,81,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,81,203,211,242,242,260,]),'relacional':([34,38,41,45,48,49,52,54,69,74,85,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,187,190,199,231,238,252,],[55,55,55,80,55,80,55,55,55,55,80,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,80,55,55,55,55,55,]),'logica':([34,38,41,45,48,49,52,54,69,74,85,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,187,190,199,231,238,252,],[56,56,56,79,56,79,56,56,56,56,79,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,79,56,56,56,56,56,]),'acceso_vector':([34,38,41,45,48,49,52,54,69,74,77,85,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,168,187,190,199,231,238,252,],[57,57,57,57,57,57,57,57,57,57,134,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,134,57,57,57,57,57,57,]),'expresion_agrupada':([34,38,41,45,48,49,52,54,69,74,85,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,187,190,199,231,238,252,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'condicion':([45,49,85,187,],[78,92,136,200,]),'inicio_for':([46,],[85,]),'params':([70,],[119,]),'param':([70,164,],[120,180,]),'args':([77,],[126,]),'arg':([77,168,],[127,183,]),'actualizacion':([170,],[185,]),'cases':([172,],[188,]),'case':([172,188,],[189,202,]),'dimensiones':([193,],[206,]),'dimension':([193,217,],[207,225,]),'selse':([221,],[230,]),'sort':([223,],[232,]),'shuffle':([223,],[233,]),'vectores':([231,238,],[239,248,]),'expresiones':([231,238,],[240,247,]),'vector':([231,238,250,],[241,241,258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',70),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',74),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',79),
  ('sentencias -> <empty>','sentencias',0,'p_sentencia_empty','parser.py',84),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',88),
  ('sentencia -> PROC IDENTIFICADOR PARENTESIS_IZQ params PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',8,'p_sentencia_declaracion_proc','parser.py',93),
  ('params -> params COMA param','params',3,'p_params','parser.py',98),
  ('params -> param','params',1,'p_params_unico','parser.py',104),
  ('params -> <empty>','params',0,'p_params_vacio','parser.py',110),
  ('param -> tipo DOS_PUNTOS IDENTIFICADOR','param',3,'p_parametro','parser.py',114),
  ('sentencia -> EXEC IDENTIFICADOR PARENTESIS_IZQ args PARENTESIS_DER PUNTO_Y_COMA','sentencia',6,'p_sentencia_execute_proc','parser.py',119),
  ('args -> args COMA arg','args',3,'p_args','parser.py',124),
  ('args -> arg','args',1,'p_args_unico','parser.py',130),
  ('args -> <empty>','args',0,'p_args_vacio','parser.py',136),
  ('arg -> IDENTIFICADOR','arg',1,'p_arg_Identificador','parser.py',140),
  ('arg -> ENTERO','arg',1,'p_arg_entero','parser.py',145),
  ('arg -> FLOTANTE','arg',1,'p_arg_flotante','parser.py',149),
  ('arg -> TRUE','arg',1,'p_arg_true','parser.py',153),
  ('arg -> FALSE','arg',1,'p_arg_false','parser.py',157),
  ('arg -> CADENA','arg',1,'p_arg_cadena','parser.py',161),
  ('arg -> CARACTER','arg',1,'p_arg_caracter','parser.py',165),
  ('arg -> acceso_vector','arg',1,'p_arg_vector','parser.py',169),
  ('sentencia -> declaracion_vector','sentencia',1,'p_sentencia_declaracion_vector','parser.py',175),
  ('declaracion_vector -> declaracion_vector_valor','declaracion_vector',1,'p_declaracion_vector_valor','parser.py',180),
  ('declaracion_vector -> declaracion_vector_sin_valor','declaracion_vector',1,'p_declaracion_vector_sin_valor','parser.py',185),
  ('declaracion_vector -> declaracion_vector_sort','declaracion_vector',1,'p_declaracion_vector_sort','parser.py',190),
  ('declaracion_vector -> declaracion_vector_shuffle','declaracion_vector',1,'p_declaracion_vector_shuffle','parser.py',195),
  ('declaracion_vector_valor -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ vectores CORCHETE_DER PUNTO_Y_COMA','declaracion_vector_valor',13,'p_vector_valor','parser.py',200),
  ('declaracion_vector_valor -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ expresiones CORCHETE_DER PUNTO_Y_COMA','declaracion_vector_valor',13,'p_vector_valor_expresiones','parser.py',204),
  ('declaracion_vector_sin_valor -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER PUNTO_Y_COMA','declaracion_vector_sin_valor',9,'p_vector_sin_valor','parser.py',208),
  ('declaracion_vector_sort -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL sort PUNTO_Y_COMA','declaracion_vector_sort',11,'p_vector_sort','parser.py',212),
  ('declaracion_vector_shuffle -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL shuffle PUNTO_Y_COMA','declaracion_vector_shuffle',11,'p_vector_shuffle','parser.py',216),
  ('dimensiones -> dimensiones COMA dimension','dimensiones',3,'p_dimensiones','parser.py',220),
  ('dimensiones -> dimension','dimensiones',1,'p_dimensiones_unico','parser.py',226),
  ('dimension -> ENTERO','dimension',1,'p_dimension','parser.py',232),
  ('vectores -> vectores COMA vector','vectores',3,'p_vectores','parser.py',236),
  ('vectores -> vector','vectores',1,'p_vectores_unico','parser.py',242),
  ('vector -> CORCHETE_IZQ expresiones CORCHETE_DER','vector',3,'p_vector','parser.py',248),
  ('vector -> CORCHETE_IZQ vectores CORCHETE_DER','vector',3,'p_vector_vectores','parser.py',253),
  ('asignacion_vector -> IDENTIFICADOR indices IGUAL expresion PUNTO_Y_COMA','asignacion_vector',5,'p_vector_asignacion','parser.py',258),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones','parser.py',262),
  ('expresiones -> expresion','expresiones',1,'p_expresiones_unico','parser.py',268),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',274),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',278),
  ('sentencia -> asignacion_vector','sentencia',1,'p_sentencia_asignacion_vector','parser.py',282),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',287),
  ('sentencia -> BREAK PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_break','parser.py',291),
  ('sentencia -> CONTINUE PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_continue','parser.py',296),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',301),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',306),
  ('sentencia -> DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DER','sentencia',8,'p_sentencia_do_while','parser.py',311),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',316),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',321),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',325),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',330),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',335),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',340),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',345),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',350),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',355),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',359),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',363),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',367),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',371),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',376),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',381),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',386),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',391),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',396),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',401),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',406),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',411),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',416),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',421),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',426),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',431),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',436),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',441),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',446),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',451),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',456),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',460),
  ('expresion -> acceso_vector','expresion',1,'p_expresion_id_k','parser.py',464),
  ('expresion -> SENO PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',4,'p_expresion_seno','parser.py',469),
  ('expresion -> COSENO PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',4,'p_expresion_coseno','parser.py',474),
  ('expresion -> INVERSION PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',4,'p_expresion_inversion','parser.py',479),
  ('sort -> SORT PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DER','sort',4,'p_expresion_vector_sort','parser.py',484),
  ('shuffle -> SHUFFLE PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DER','shuffle',4,'p_expresion_vector_shuffle','parser.py',489),
  ('acceso_vector -> IDENTIFICADOR indices','acceso_vector',2,'p_acceso_vector','parser.py',494),
  ('indices -> indices indice','indices',2,'p_indices','parser.py',499),
  ('indices -> indice','indices',1,'p_indices_unico','parser.py',505),
  ('indice -> CORCHETE_IZQ expresion CORCHETE_DER','indice',3,'p_indice','parser.py',511),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',516),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',521),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',526),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',531),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',536),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',541),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',546),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',550),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',554),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',558),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',563),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',567),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',571),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',575),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',580),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',584),
  ('sentencia -> SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DER','sentencia',7,'p_sentencia_switch','parser.py',588),
  ('cases -> cases case','cases',2,'p_cases','parser.py',593),
  ('cases -> case','cases',1,'p_cases_unico','parser.py',599),
  ('case -> CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',6,'p_case','parser.py',605),
  ('case -> DEFAULT DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',5,'p_case_default','parser.py',610),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',615),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',620),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',625),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',629),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',633),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',637),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',641),
]
