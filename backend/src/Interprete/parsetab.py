
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftXORrightNOTleftIGUALQUEDIFERENTEQUEMAYORQUEMENORQUEMAYORIGUALQUEMENORIGUALQUEleftMASMENOSleftMULTIPLICACIONDIVISIONnonassocPOTENCIArightUMENOSAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA CONTINUE CORCHETE_DER CORCHETE_IZQ COSENO DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO EXEC FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO INVERSION LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PROC PUNTO_Y_COMA SENO SHUFFLE SORT SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE VECTOR WHILE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencias : sentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : PROC IDENTIFICADOR PARENTESIS_IZQ params PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERparams : params COMA paramparams : paramparams : param : tipo DOS_PUNTOS IDENTIFICADORsentencia : EXEC IDENTIFICADOR PARENTESIS_IZQ args PARENTESIS_DER PUNTO_Y_COMAargs : args COMA argargs : argargs : arg : IDENTIFICADORarg : ENTEROarg : FLOTANTEarg : TRUEarg : FALSEarg : CADENAarg : CARACTERarg : acceso_vectorsentencia : declaracion_vectordeclaracion_vector : declaracion_vector_valordeclaracion_vector : declaracion_vector_sin_valordeclaracion_vector : declaracion_vector_sortdeclaracion_vector : declaracion_vector_shuffledeclaracion_vector_valor : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ vectores CORCHETE_DER PUNTO_Y_COMAdeclaracion_vector_valor : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ expresiones CORCHETE_DER PUNTO_Y_COMAdeclaracion_vector_sin_valor : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER PUNTO_Y_COMAdeclaracion_vector_sort : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL sort PUNTO_Y_COMAdeclaracion_vector_shuffle : VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL shuffle PUNTO_Y_COMAdimensiones : dimensiones COMA dimensiondimensiones : dimensiondimension : ENTEROvectores : vectores COMA vectorvectores : vectorvector : CORCHETE_IZQ expresiones CORCHETE_DERvector : CORCHETE_IZQ vectores CORCHETE_DERasignacion_vector : IDENTIFICADOR indices IGUAL expresion PUNTO_Y_COMAexpresiones : expresiones COMA expresionexpresiones : expresionsentencia : declaracionsentencia : asignacionsentencia : asignacion_vectorsentencia : sentenciaIfsentencia : BREAK PUNTO_Y_COMAsentencia : CONTINUE PUNTO_Y_COMAsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR indices INCREMENTOactualizacion : IDENTIFICADOR indices DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR indices INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR indices DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : MENOS expresion %prec UMENOSexpresion : expresion POTENCIA expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion MAS expresionexpresion : expresion MENOS expresionrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : expresion AND expresionlogica : expresion OR expresionexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : acceso_vectorexpresion : SENO PARENTESIS_IZQ expresion PARENTESIS_DERexpresion : COSENO PARENTESIS_IZQ expresion PARENTESIS_DERexpresion : INVERSION PARENTESIS_IZQ expresion PARENTESIS_DERsort : SORT PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DERshuffle : SHUFFLE PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DERacceso_vector : IDENTIFICADOR indicesindices : indices indiceindices : indiceindice : CORCHETE_IZQ expresion CORCHETE_DERexpresion : IDENTIFICADORlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfsentencia : SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DERcases : cases casecases : casecase : CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcase : DEFAULT DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[4,4,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,4,-59,-60,4,-67,-61,-62,-63,-5,-40,4,4,-66,4,-11,4,4,4,-49,-113,4,-109,-6,4,-51,4,4,4,4,4,-112,-30,-50,-47,4,-47,-110,-31,-32,-28,-29,]),'PROC':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[5,5,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,5,-59,-60,5,-67,-61,-62,-63,-5,-40,5,5,-66,5,-11,5,5,5,-49,-113,5,-109,-6,5,-51,5,5,5,5,5,-112,-30,-50,-47,5,-47,-110,-31,-32,-28,-29,]),'EXEC':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[7,7,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,7,-59,-60,7,-67,-61,-62,-63,-5,-40,7,7,-66,7,-11,7,7,7,-49,-113,7,-109,-6,7,-51,7,7,7,7,7,-112,-30,-50,-47,7,-47,-110,-31,-32,-28,-29,]),'BREAK':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[13,13,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,13,-59,-60,13,-67,-61,-62,-63,-5,-40,13,13,-66,13,-11,13,13,13,-49,-113,13,-109,-6,13,-51,13,227,13,234,13,-112,-30,-50,-47,13,-47,-110,-31,-32,-28,-29,]),'CONTINUE':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[14,14,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,14,-59,-60,14,-67,-61,-62,-63,-5,-40,14,14,-66,14,-11,14,14,14,-49,-113,14,-109,-6,14,-51,14,14,14,14,14,-112,-30,-50,-47,14,-47,-110,-31,-32,-28,-29,]),'WHILE':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,142,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[15,15,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,15,-59,-60,15,-67,-61,-62,-63,175,-5,-40,15,15,-66,15,-11,15,15,15,-49,-113,15,-109,-6,15,-51,15,15,15,15,15,-112,-30,-50,-47,15,-47,-110,-31,-32,-28,-29,]),'FOR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[16,16,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,16,-59,-60,16,-67,-61,-62,-63,-5,-40,16,16,-66,16,-11,16,16,16,-49,-113,16,-109,-6,16,-51,16,16,16,16,16,-112,-30,-50,-47,16,-47,-110,-31,-32,-28,-29,]),'DO':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[17,17,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,17,-59,-60,17,-67,-61,-62,-63,-5,-40,17,17,-66,17,-11,17,17,17,-49,-113,17,-109,-6,17,-51,17,17,17,17,17,-112,-30,-50,-47,17,-47,-110,-31,-32,-28,-29,]),'IDENTIFICADOR':([0,2,3,5,7,8,9,10,11,12,19,20,21,22,23,24,27,28,29,30,31,32,33,34,39,41,43,44,45,46,47,48,49,52,54,69,71,72,75,79,87,88,89,91,92,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,124,125,127,145,148,169,170,172,173,174,177,179,183,186,188,191,194,196,198,199,204,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,238,243,244,245,250,251,252,253,259,264,266,],[6,6,-3,35,42,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,51,-120,-121,-122,-123,-124,-2,61,61,61,-47,-48,86,90,6,61,86,61,61,61,-59,-60,61,129,86,-52,-53,141,6,61,-67,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-61,-62,-63,178,-5,185,-40,129,6,190,6,-66,6,-11,6,86,61,6,6,-49,61,-113,6,-109,-6,6,-51,6,6,6,6,6,-112,-30,-50,-47,6,61,-47,-110,61,-31,-32,260,261,61,-28,-29,]),'SWITCH':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[18,18,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,18,-59,-60,18,-67,-61,-62,-63,-5,-40,18,18,-66,18,-11,18,18,18,-49,-113,18,-109,-6,18,-51,18,18,18,18,18,-112,-30,-50,-47,18,-47,-110,-31,-32,-28,-29,]),'IF':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,222,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[25,25,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,25,-59,-60,25,-67,-61,-62,-63,-5,-40,25,25,-66,25,-11,25,25,25,-49,-113,25,-109,-6,25,-51,25,25,25,25,25,25,-112,-30,-50,-47,25,-47,-110,-31,-32,-28,-29,]),'VECTOR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[26,26,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,26,-59,-60,26,-67,-61,-62,-63,-5,-40,26,26,-66,26,-11,26,26,26,-49,-113,26,-109,-6,26,-51,26,26,26,26,26,-112,-30,-50,-47,26,-47,-110,-31,-32,-28,-29,]),'TIPO_INT':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,92,97,124,125,127,148,168,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[28,28,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,28,28,28,28,-59,-60,28,-67,-61,-62,-63,-5,28,-40,28,28,-66,28,-11,28,28,28,-49,-113,28,-109,-6,28,-51,28,28,28,28,28,-112,-30,-50,-47,28,-47,-110,-31,-32,-28,-29,]),'TIPO_FLOAT':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,92,97,124,125,127,148,168,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[29,29,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,29,29,29,29,-59,-60,29,-67,-61,-62,-63,-5,29,-40,29,29,-66,29,-11,29,29,29,-49,-113,29,-109,-6,29,-51,29,29,29,29,29,-112,-30,-50,-47,29,-47,-110,-31,-32,-28,-29,]),'TIPO_BOOL':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,92,97,124,125,127,148,168,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[30,30,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,30,30,30,30,-59,-60,30,-67,-61,-62,-63,-5,30,-40,30,30,-66,30,-11,30,30,30,-49,-113,30,-109,-6,30,-51,30,30,30,30,30,-112,-30,-50,-47,30,-47,-110,-31,-32,-28,-29,]),'TIPO_CHAR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,92,97,124,125,127,148,168,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[31,31,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,31,31,31,31,-59,-60,31,-67,-61,-62,-63,-5,31,-40,31,31,-66,31,-11,31,31,31,-49,-113,31,-109,-6,31,-51,31,31,31,31,31,-112,-30,-50,-47,31,-47,-110,-31,-32,-28,-29,]),'TIPO_STR':([0,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,46,47,50,70,71,72,92,97,124,125,127,148,168,170,173,177,179,183,186,188,196,198,199,206,209,210,214,215,219,220,221,225,226,228,229,231,233,235,236,243,244,250,251,264,266,],[32,32,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,32,32,32,32,-59,-60,32,-67,-61,-62,-63,-5,32,-40,32,32,-66,32,-11,32,32,32,-49,-113,32,-109,-6,32,-51,32,32,32,32,32,-112,-30,-50,-47,32,-47,-110,-31,-32,-28,-29,]),'$end':([0,1,2,3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,71,72,97,124,125,127,148,170,179,186,199,206,210,214,219,229,231,233,244,250,251,264,266,],[-4,0,-1,-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,-59,-60,-67,-61,-62,-63,-5,-40,-66,-11,-49,-113,-109,-6,-51,-112,-30,-50,-110,-31,-32,-28,-29,]),'LLAVE_DER':([3,8,9,10,11,12,19,20,21,22,23,24,33,43,44,47,71,72,92,97,124,125,127,148,170,173,177,179,183,186,188,192,193,196,198,199,206,207,210,214,215,219,225,228,229,231,233,235,236,237,243,244,250,251,264,266,],[-3,-23,-43,-44,-45,-46,-24,-25,-26,-27,-64,-65,-2,-47,-48,-4,-59,-60,142,-67,-61,-62,-63,-5,-40,-4,-4,-66,-4,-11,199,206,-115,210,214,-49,-113,-114,-109,-6,-4,-51,233,-4,-112,-30,-50,-117,-111,244,-116,-110,-31,-32,-28,-29,]),'PARENTESIS_IZQ':([4,15,16,18,25,34,35,39,41,42,45,48,49,52,54,58,59,60,69,75,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,175,178,179,191,194,204,238,241,242,245,259,],[34,45,46,48,49,52,70,52,52,79,52,52,52,52,52,116,117,118,52,52,52,-52,-53,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-63,191,197,-66,52,52,52,52,252,253,52,52,]),'INCREMENTO':([6,38,40,76,128,190,203,],[36,73,-95,-94,-96,201,216,]),'DECREMENTO':([6,38,40,76,128,190,203,],[37,74,-95,-94,-96,202,217,]),'IGUAL':([6,38,40,51,76,90,128,141,190,223,],[39,75,-95,96,-94,39,-96,96,204,230,]),'CORCHETE_IZQ':([6,26,38,40,61,76,86,119,128,129,190,203,230,238,245,257,],[41,50,41,-95,41,-94,41,41,-96,41,41,41,238,245,245,245,]),'PUNTO_Y_COMA':([13,14,36,37,40,51,55,56,57,61,62,63,64,65,66,67,68,73,74,76,77,81,82,84,85,86,99,115,119,120,126,128,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,171,180,181,182,223,227,234,239,240,256,258,268,269,],[43,44,71,72,-95,97,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,124,125,-94,127,-118,-119,-98,-99,-100,148,-68,-93,-80,170,-96,174,179,-108,-69,-70,-71,-72,-73,-84,-74,-75,-76,-77,-78,-79,-81,-82,-83,186,-88,-89,-90,231,235,243,250,251,264,266,-91,-92,]),'LLAVE_IZQ':([17,139,143,144,167,200,222,],[47,173,176,177,183,215,228,]),'CORCHETE_DER':([28,29,30,31,32,40,55,56,57,61,62,63,64,65,66,67,68,76,78,95,115,119,120,128,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,180,181,182,246,247,248,249,254,255,262,263,265,267,],[-120,-121,-122,-123,-124,-95,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,128,145,-68,-93,-80,-96,-108,-69,-70,-71,-72,-73,-84,-74,-75,-76,-77,-78,-79,-81,-82,-83,-88,-89,-90,256,258,-37,-42,262,263,-38,-39,-36,-41,]),'DOS_PUNTOS':([28,29,30,31,32,40,55,56,57,61,62,63,64,65,66,67,68,76,115,119,120,123,128,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,180,181,182,195,208,],[-120,-121,-122,-123,-124,-95,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,-68,-93,-80,169,-96,-108,-69,-70,-71,-72,-73,-84,-74,-75,-76,-77,-78,-79,-81,-82,-83,-88,-89,-90,209,220,]),'MENOS':([34,39,40,41,45,48,49,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,75,76,77,78,81,82,83,84,85,86,87,88,89,93,96,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,126,127,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,179,180,181,182,191,194,204,208,218,238,245,249,259,267,],[54,54,-95,54,54,54,54,54,104,54,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,54,54,-94,104,104,-86,-85,104,-98,-99,-97,54,-52,-53,104,54,104,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-68,54,54,54,-93,104,104,-63,-96,104,-108,-69,-70,-71,-72,-73,104,104,104,104,104,104,104,104,104,104,104,104,104,-66,-88,-89,-90,54,54,54,104,104,54,54,104,54,104,]),'SENO':([34,39,41,45,48,49,52,54,69,75,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,179,191,194,204,238,245,259,],[58,58,58,58,58,58,58,58,58,58,58,-52,-53,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-63,-66,58,58,58,58,58,58,]),'COSENO':([34,39,41,45,48,49,52,54,69,75,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,179,191,194,204,238,245,259,],[59,59,59,59,59,59,59,59,59,59,59,-52,-53,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-63,-66,59,59,59,59,59,59,]),'INVERSION':([34,39,41,45,48,49,52,54,69,75,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,179,191,194,204,238,245,259,],[60,60,60,60,60,60,60,60,60,60,60,-52,-53,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-63,-66,60,60,60,60,60,60,]),'ENTERO':([34,39,41,45,48,49,52,54,69,75,79,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,172,179,191,194,197,204,224,238,245,259,],[62,62,62,62,62,62,62,62,62,62,132,62,-52,-53,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-63,132,-66,62,62,213,62,213,62,62,62,]),'FLOTANTE':([34,39,41,45,48,49,52,54,69,75,79,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,172,179,191,194,204,238,245,259,],[63,63,63,63,63,63,63,63,63,63,133,63,-52,-53,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-63,133,-66,63,63,63,63,63,63,]),'TRUE':([34,39,41,45,48,49,52,54,69,75,79,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,172,179,191,194,204,238,245,259,],[64,64,64,84,64,84,64,64,64,64,134,84,-52,-53,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-63,134,-66,84,64,64,64,64,64,]),'FALSE':([34,39,41,45,48,49,52,54,69,75,79,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,172,179,191,194,204,238,245,259,],[65,65,65,85,65,85,65,65,65,65,135,85,-52,-53,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-63,135,-66,85,65,65,65,65,65,]),'CADENA':([34,39,41,45,48,49,52,54,69,75,79,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,172,179,191,194,204,238,245,259,],[66,66,66,66,66,66,66,66,66,66,136,66,-52,-53,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-63,136,-66,66,66,66,66,66,66,]),'CARACTER':([34,39,41,45,48,49,52,54,69,75,79,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,172,179,191,194,204,238,245,259,],[67,67,67,67,67,67,67,67,67,67,137,67,-52,-53,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-63,137,-66,67,67,67,67,67,67,]),'NOT':([34,39,41,45,48,49,52,54,69,75,87,88,89,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,127,179,191,194,204,238,245,259,],[69,69,69,69,69,69,69,69,69,69,69,-52,-53,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-63,-66,69,69,69,69,69,69,]),'PARENTESIS_DER':([40,53,55,56,57,61,62,63,64,65,66,67,68,70,76,79,80,81,82,84,85,86,93,94,98,115,119,120,121,122,128,129,130,131,132,133,134,135,136,137,138,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,184,185,187,189,201,202,205,211,212,213,216,217,218,232,260,261,],[-95,99,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-9,-94,-14,139,-118,-119,-98,-99,-100,143,144,147,-68,-93,-80,167,-8,-96,-15,171,-13,-16,-17,-18,-19,-20,-21,-22,-108,-69,-70,-71,-72,-73,-84,-74,-75,-76,-77,-78,-79,-81,-82,-83,180,181,182,-88,-89,-90,-7,-10,-12,200,-54,-55,219,223,-34,-35,-56,-57,-58,-33,268,269,]),'POTENCIA':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,100,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,100,100,-86,-85,100,-98,-99,-97,100,100,-68,-93,100,100,-96,100,-108,None,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-88,-89,-90,100,100,100,100,]),'MULTIPLICACION':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,101,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,101,101,-86,-85,101,-98,-99,-97,101,101,-68,-93,101,101,-96,101,-108,-69,-70,-71,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-88,-89,-90,101,101,101,101,]),'DIVISION':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,102,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,102,102,-86,-85,102,-98,-99,-97,102,102,-68,-93,102,102,-96,102,-108,-69,-70,-71,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-88,-89,-90,102,102,102,102,]),'MAS':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,103,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,103,103,-86,-85,103,-98,-99,-97,103,103,-68,-93,103,103,-96,103,-108,-69,-70,-71,-72,-73,103,103,103,103,103,103,103,103,103,103,103,103,103,-88,-89,-90,103,103,103,103,]),'MODULO':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,105,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,105,105,-86,-85,105,-98,-99,-97,105,105,-68,-93,-80,105,-96,105,-108,-69,-70,-71,-72,-73,105,-74,-75,-76,-77,-78,-79,-81,-82,-83,105,105,105,-88,-89,-90,105,105,105,105,]),'IGUALQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,106,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,106,106,-86,-85,106,-98,-99,-97,106,106,-68,-93,106,106,-96,106,-108,-69,-70,-71,-72,-73,106,-74,-75,-76,-77,-78,-79,106,106,106,106,106,106,-88,-89,-90,106,106,106,106,]),'DIFERENTEQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,107,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,107,107,-86,-85,107,-98,-99,-97,107,107,-68,-93,107,107,-96,107,-108,-69,-70,-71,-72,-73,107,-74,-75,-76,-77,-78,-79,107,107,107,107,107,107,-88,-89,-90,107,107,107,107,]),'MAYORQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,108,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,108,108,-86,-85,108,-98,-99,-97,108,108,-68,-93,108,108,-96,108,-108,-69,-70,-71,-72,-73,108,-74,-75,-76,-77,-78,-79,108,108,108,108,108,108,-88,-89,-90,108,108,108,108,]),'MAYORIGUALQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,109,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,109,109,-86,-85,109,-98,-99,-97,109,109,-68,-93,109,109,-96,109,-108,-69,-70,-71,-72,-73,109,-74,-75,-76,-77,-78,-79,109,109,109,109,109,109,-88,-89,-90,109,109,109,109,]),'MENORQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,110,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,110,110,-86,-85,110,-98,-99,-97,110,110,-68,-93,110,110,-96,110,-108,-69,-70,-71,-72,-73,110,-74,-75,-76,-77,-78,-79,110,110,110,110,110,110,-88,-89,-90,110,110,110,110,]),'MENORIGUALQUE':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,111,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,111,111,-86,-85,111,-98,-99,-97,111,111,-68,-93,111,111,-96,111,-108,-69,-70,-71,-72,-73,111,-74,-75,-76,-77,-78,-79,111,111,111,111,111,111,-88,-89,-90,111,111,111,111,]),'XOR':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,112,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,112,112,-86,-85,112,-98,-99,-97,112,112,-68,-93,-80,112,-96,112,-108,-69,-70,-71,-72,-73,112,-74,-75,-76,-77,-78,-79,-81,112,112,112,112,112,-88,-89,-90,112,112,112,112,]),'AND':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,113,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,113,113,-86,-85,113,-98,-99,-97,113,113,-68,-93,-80,113,-96,113,-108,-69,-70,-71,-72,-73,113,-74,-75,-76,-77,-78,-79,-81,-82,113,113,113,113,-88,-89,-90,113,113,113,113,]),'OR':([40,53,55,56,57,61,62,63,64,65,66,67,68,76,77,78,81,82,83,84,85,86,93,98,115,119,120,126,128,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,180,181,182,208,218,249,267,],[-95,114,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-94,114,114,-86,-85,114,-98,-99,-97,114,114,-68,-93,-80,114,-96,114,-108,-69,-70,-71,-72,-73,114,-74,-75,-76,-77,-78,-79,-81,-82,-83,114,114,114,-88,-89,-90,114,114,114,114,]),'COMA':([40,55,56,57,61,62,63,64,65,66,67,68,70,76,79,115,119,120,121,122,128,129,130,131,132,133,134,135,136,137,138,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,180,181,182,184,185,187,211,212,213,232,246,247,248,249,254,255,262,263,265,267,],[-95,-85,-86,-87,-97,-101,-102,-98,-99,-105,-106,-107,-9,-94,-14,-68,-93,-80,168,-8,-96,-15,172,-13,-16,-17,-18,-19,-20,-21,-22,-108,-69,-70,-71,-72,-73,-84,-74,-75,-76,-77,-78,-79,-81,-82,-83,-88,-89,-90,-7,-10,-12,224,-34,-35,-33,257,259,-37,-42,259,257,-38,-39,-36,-41,]),'CASE':([176,192,193,207,235,243,],[194,194,-115,-114,-117,-116,]),'DEFAULT':([176,192,193,207,235,243,],[195,195,-115,-114,-117,-116,]),'ELSE':([210,],[222,]),'SORT':([230,],[241,]),'SHUFFLE':([230,],[242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,47,173,177,183,209,215,220,228,],[2,92,188,196,198,221,225,226,236,]),'sentencia':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[3,33,3,33,3,3,3,33,33,33,3,3,3,33,33,33,3,33,]),'declaracion_vector':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'declaracion':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'asignacion':([0,2,46,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[10,10,88,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'asignacion_vector':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'sentenciaIf':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,222,225,226,228,236,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,229,12,12,12,12,]),'declaracion_vector_valor':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'declaracion_vector_sin_valor':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'declaracion_vector_sort':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'declaracion_vector_shuffle':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'declaracion_valor':([0,2,46,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[23,23,89,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'declaracion_sin_valor':([0,2,47,92,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'tipo':([0,2,46,47,50,70,92,168,173,177,183,188,196,198,209,215,220,221,225,226,228,236,],[27,27,91,27,95,123,27,123,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'indices':([6,61,86,129,190,],[38,119,119,119,203,]),'indice':([6,38,61,86,119,129,190,203,],[40,76,40,40,76,40,40,76,]),'expresion':([34,39,41,45,48,49,52,54,69,75,87,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,191,194,204,238,245,259,],[53,77,78,83,93,83,98,115,120,126,83,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,83,208,218,249,249,267,]),'relacional':([34,39,41,45,48,49,52,54,69,75,87,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,191,194,204,238,245,259,],[55,55,55,82,55,82,55,55,55,55,82,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,82,55,55,55,55,55,]),'logica':([34,39,41,45,48,49,52,54,69,75,87,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,191,194,204,238,245,259,],[56,56,56,81,56,81,56,56,56,56,81,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,81,56,56,56,56,56,]),'acceso_vector':([34,39,41,45,48,49,52,54,69,75,79,87,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,172,191,194,204,238,245,259,],[57,57,57,57,57,57,57,57,57,57,138,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,138,57,57,57,57,57,57,]),'expresion_agrupada':([34,39,41,45,48,49,52,54,69,75,87,96,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,191,194,204,238,245,259,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'condicion':([45,49,87,191,],[80,94,140,205,]),'inicio_for':([46,],[87,]),'params':([70,],[121,]),'param':([70,168,],[122,184,]),'args':([79,],[130,]),'arg':([79,172,],[131,187,]),'actualizacion':([174,],[189,]),'cases':([176,],[192,]),'case':([176,192,],[193,207,]),'dimensiones':([197,],[211,]),'dimension':([197,224,],[212,232,]),'selse':([228,],[237,]),'sort':([230,],[239,]),'shuffle':([230,],[240,]),'vectores':([238,245,],[246,255,]),'expresiones':([238,245,],[247,254,]),'vector':([238,245,257,],[248,248,265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',72),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',76),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',81),
  ('sentencias -> <empty>','sentencias',0,'p_sentencia_empty','parser.py',86),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',90),
  ('sentencia -> PROC IDENTIFICADOR PARENTESIS_IZQ params PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',8,'p_sentencia_declaracion_proc','parser.py',95),
  ('params -> params COMA param','params',3,'p_params','parser.py',100),
  ('params -> param','params',1,'p_params_unico','parser.py',106),
  ('params -> <empty>','params',0,'p_params_vacio','parser.py',112),
  ('param -> tipo DOS_PUNTOS IDENTIFICADOR','param',3,'p_parametro','parser.py',116),
  ('sentencia -> EXEC IDENTIFICADOR PARENTESIS_IZQ args PARENTESIS_DER PUNTO_Y_COMA','sentencia',6,'p_sentencia_execute_proc','parser.py',121),
  ('args -> args COMA arg','args',3,'p_args','parser.py',126),
  ('args -> arg','args',1,'p_args_unico','parser.py',132),
  ('args -> <empty>','args',0,'p_args_vacio','parser.py',138),
  ('arg -> IDENTIFICADOR','arg',1,'p_arg_Identificador','parser.py',142),
  ('arg -> ENTERO','arg',1,'p_arg_entero','parser.py',147),
  ('arg -> FLOTANTE','arg',1,'p_arg_flotante','parser.py',151),
  ('arg -> TRUE','arg',1,'p_arg_true','parser.py',155),
  ('arg -> FALSE','arg',1,'p_arg_false','parser.py',159),
  ('arg -> CADENA','arg',1,'p_arg_cadena','parser.py',163),
  ('arg -> CARACTER','arg',1,'p_arg_caracter','parser.py',167),
  ('arg -> acceso_vector','arg',1,'p_arg_vector','parser.py',171),
  ('sentencia -> declaracion_vector','sentencia',1,'p_sentencia_declaracion_vector','parser.py',177),
  ('declaracion_vector -> declaracion_vector_valor','declaracion_vector',1,'p_declaracion_vector_valor','parser.py',182),
  ('declaracion_vector -> declaracion_vector_sin_valor','declaracion_vector',1,'p_declaracion_vector_sin_valor','parser.py',187),
  ('declaracion_vector -> declaracion_vector_sort','declaracion_vector',1,'p_declaracion_vector_sort','parser.py',192),
  ('declaracion_vector -> declaracion_vector_shuffle','declaracion_vector',1,'p_declaracion_vector_shuffle','parser.py',197),
  ('declaracion_vector_valor -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ vectores CORCHETE_DER PUNTO_Y_COMA','declaracion_vector_valor',13,'p_vector_valor','parser.py',202),
  ('declaracion_vector_valor -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL CORCHETE_IZQ expresiones CORCHETE_DER PUNTO_Y_COMA','declaracion_vector_valor',13,'p_vector_valor_expresiones','parser.py',206),
  ('declaracion_vector_sin_valor -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER PUNTO_Y_COMA','declaracion_vector_sin_valor',9,'p_vector_sin_valor','parser.py',210),
  ('declaracion_vector_sort -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL sort PUNTO_Y_COMA','declaracion_vector_sort',11,'p_vector_sort','parser.py',214),
  ('declaracion_vector_shuffle -> VECTOR CORCHETE_IZQ tipo CORCHETE_DER IDENTIFICADOR PARENTESIS_IZQ dimensiones PARENTESIS_DER IGUAL shuffle PUNTO_Y_COMA','declaracion_vector_shuffle',11,'p_vector_shuffle','parser.py',218),
  ('dimensiones -> dimensiones COMA dimension','dimensiones',3,'p_dimensiones','parser.py',222),
  ('dimensiones -> dimension','dimensiones',1,'p_dimensiones_unico','parser.py',228),
  ('dimension -> ENTERO','dimension',1,'p_dimension','parser.py',234),
  ('vectores -> vectores COMA vector','vectores',3,'p_vectores','parser.py',238),
  ('vectores -> vector','vectores',1,'p_vectores_unico','parser.py',244),
  ('vector -> CORCHETE_IZQ expresiones CORCHETE_DER','vector',3,'p_vector','parser.py',250),
  ('vector -> CORCHETE_IZQ vectores CORCHETE_DER','vector',3,'p_vector_vectores','parser.py',255),
  ('asignacion_vector -> IDENTIFICADOR indices IGUAL expresion PUNTO_Y_COMA','asignacion_vector',5,'p_vector_asignacion','parser.py',260),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones','parser.py',264),
  ('expresiones -> expresion','expresiones',1,'p_expresiones_unico','parser.py',270),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',276),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',280),
  ('sentencia -> asignacion_vector','sentencia',1,'p_sentencia_asignacion_vector','parser.py',284),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',289),
  ('sentencia -> BREAK PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_break','parser.py',293),
  ('sentencia -> CONTINUE PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_continue','parser.py',298),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',303),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',308),
  ('sentencia -> DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DER','sentencia',8,'p_sentencia_do_while','parser.py',313),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',318),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',323),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',327),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',332),
  ('actualizacion -> IDENTIFICADOR indices INCREMENTO','actualizacion',3,'p_actualizacion_incremento_vector','parser.py',338),
  ('actualizacion -> IDENTIFICADOR indices DECREMENTO','actualizacion',3,'p_actualizacion_decremento_vector','parser.py',343),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',348),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',353),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',358),
  ('sentencia -> IDENTIFICADOR indices INCREMENTO PUNTO_Y_COMA','sentencia',4,'p_sentencia_incremento_vector','parser.py',363),
  ('sentencia -> IDENTIFICADOR indices DECREMENTO PUNTO_Y_COMA','sentencia',4,'p_sentencia_decremento_vector','parser.py',368),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',373),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',378),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',382),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',386),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',390),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',394),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',399),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',404),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',409),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',414),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',419),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',424),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',429),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',434),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',439),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',444),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',449),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',454),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',459),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',464),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',469),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',474),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',479),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',483),
  ('expresion -> acceso_vector','expresion',1,'p_expresion_id_k','parser.py',487),
  ('expresion -> SENO PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',4,'p_expresion_seno','parser.py',492),
  ('expresion -> COSENO PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',4,'p_expresion_coseno','parser.py',497),
  ('expresion -> INVERSION PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',4,'p_expresion_inversion','parser.py',502),
  ('sort -> SORT PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DER','sort',4,'p_expresion_vector_sort','parser.py',507),
  ('shuffle -> SHUFFLE PARENTESIS_IZQ IDENTIFICADOR PARENTESIS_DER','shuffle',4,'p_expresion_vector_shuffle','parser.py',512),
  ('acceso_vector -> IDENTIFICADOR indices','acceso_vector',2,'p_acceso_vector','parser.py',517),
  ('indices -> indices indice','indices',2,'p_indices','parser.py',522),
  ('indices -> indice','indices',1,'p_indices_unico','parser.py',528),
  ('indice -> CORCHETE_IZQ expresion CORCHETE_DER','indice',3,'p_indice','parser.py',534),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',539),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',544),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',549),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',554),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',559),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',564),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',569),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',573),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',577),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',581),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',586),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',590),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',594),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',598),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',603),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',607),
  ('sentencia -> SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DER','sentencia',7,'p_sentencia_switch','parser.py',611),
  ('cases -> cases case','cases',2,'p_cases','parser.py',616),
  ('cases -> case','cases',1,'p_cases_unico','parser.py',622),
  ('case -> CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',6,'p_case','parser.py',628),
  ('case -> DEFAULT DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',5,'p_case_default','parser.py',633),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',638),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',643),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',648),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',652),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',656),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',660),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',664),
]
