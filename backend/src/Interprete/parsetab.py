
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUEAND CADENA CARACTER COMA COMENTARIOLINEA COMENTARIOMULTILINEA DECREMENTO DIFERENTEQUE DIVISION ENTERO FALSE FLOTANTE IDENTIFICADOR IGUAL IGUALQUE INCREMENTO MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NEGACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionexpresion : logicalogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERtipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,7,8,16,35,55,58,74,],[4,4,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'IDENTIFICADOR':([0,2,3,5,6,7,8,10,11,12,13,14,15,16,35,55,58,74,],[9,9,-3,-5,-6,-8,-9,19,-39,-40,-41,-42,-43,-2,-11,-7,-4,-10,]),'TIPO_INT':([0,2,3,5,6,7,8,16,35,55,58,74,],[11,11,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'TIPO_FLOAT':([0,2,3,5,6,7,8,16,35,55,58,74,],[12,12,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'TIPO_BOOL':([0,2,3,5,6,7,8,16,35,55,58,74,],[13,13,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'TIPO_CHAR':([0,2,3,5,6,7,8,16,35,55,58,74,],[14,14,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'TIPO_STR':([0,2,3,5,6,7,8,16,35,55,58,74,],[15,15,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'$end':([1,2,3,5,6,7,8,16,35,55,58,74,],[0,-1,-3,-5,-6,-8,-9,-2,-11,-7,-4,-10,]),'PARENTESIS_IZQ':([4,17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[17,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'IGUAL':([9,19,],[18,34,]),'MENOS':([17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[22,22,22,39,22,-19,-26,-31,-32,-33,-34,-35,-36,-37,22,39,22,39,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-17,39,39,-38,39,39,-14,-15,-16,39,-20,-21,-22,-23,-24,-25,39,39,39,]),'ENTERO':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FLOTANTE':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TRUE':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FALSE':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CADENA':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'CARACTER':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'NOT':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PUNTO_Y_COMA':([19,23,24,25,26,27,28,29,30,31,33,37,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[35,-19,-26,-31,-32,-33,-34,-35,-36,-37,55,58,-17,-29,74,-38,-12,-13,-14,-15,-16,-18,-20,-21,-22,-23,-24,-25,-27,-28,-30,]),'PARENTESIS_DER':([21,23,24,25,26,27,28,29,30,31,36,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[37,-19,-26,-31,-32,-33,-34,-35,-36,-37,57,-17,-29,-38,-12,-13,-14,-15,-16,-18,-20,-21,-22,-23,-24,-25,-27,-28,-30,]),'MAS':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[38,-19,-26,-31,-32,-33,-34,-35,-36,-37,38,38,-17,38,38,-38,38,38,-14,-15,-16,38,-20,-21,-22,-23,-24,-25,38,38,38,]),'MULTIPLICACION':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[40,-19,-26,-31,-32,-33,-34,-35,-36,-37,40,40,40,40,40,-38,40,40,-14,-15,40,40,-20,-21,-22,-23,-24,-25,40,40,40,]),'DIVISION':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[41,-19,-26,-31,-32,-33,-34,-35,-36,-37,41,41,41,41,41,-38,41,41,-14,-15,41,41,-20,-21,-22,-23,-24,-25,41,41,41,]),'POTENCIA':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[42,-19,-26,-31,-32,-33,-34,-35,-36,-37,42,42,42,42,42,-38,42,42,-14,-15,None,42,-20,-21,-22,-23,-24,-25,42,42,42,]),'MODULO':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[43,-19,-26,-31,-32,-33,-34,-35,-36,-37,43,43,-17,43,43,-38,43,43,-14,-15,-16,43,-20,-21,-22,-23,-24,-25,43,43,43,]),'IGUALQUE':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[44,-19,-26,-31,-32,-33,-34,-35,-36,-37,44,44,44,44,44,-38,44,44,44,44,44,44,-20,-21,-22,-23,-24,-25,44,44,44,]),'DIFERENTEQUE':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[45,-19,-26,-31,-32,-33,-34,-35,-36,-37,45,45,45,45,45,-38,45,45,45,45,45,45,-20,-21,-22,-23,-24,-25,45,45,45,]),'MAYORQUE':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[46,-19,-26,-31,-32,-33,-34,-35,-36,-37,46,46,46,46,46,-38,46,46,46,46,46,46,46,46,-22,-23,-24,-25,46,46,46,]),'MAYORIGUALQUE':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[47,-19,-26,-31,-32,-33,-34,-35,-36,-37,47,47,47,47,47,-38,47,47,47,47,47,47,47,47,47,-23,47,-25,47,47,47,]),'MENORQUE':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[48,-19,-26,-31,-32,-33,-34,-35,-36,-37,48,48,48,48,48,-38,48,48,48,48,48,48,48,48,-22,-23,-24,-25,48,48,48,]),'MENORIGUALQUE':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[49,-19,-26,-31,-32,-33,-34,-35,-36,-37,49,49,49,49,49,-38,49,49,49,49,49,49,49,49,49,-23,49,-25,49,49,49,]),'AND':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[50,-19,-26,-31,-32,-33,-34,-35,-36,-37,50,50,-17,50,50,-38,50,50,-14,-15,-16,50,-20,-21,-22,-23,-24,-25,50,50,50,]),'OR':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[51,-19,-26,-31,-32,-33,-34,-35,-36,-37,51,51,-17,51,51,-38,51,51,-14,-15,-16,51,-20,-21,-22,-23,-24,-25,51,51,51,]),'XOR':([21,23,24,25,26,27,28,29,30,31,33,36,53,54,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,],[52,-19,-26,-31,-32,-33,-34,-35,-36,-37,52,52,-17,52,52,-38,52,52,-14,-15,-16,52,-20,-21,-22,-23,-24,-25,52,52,52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,],[2,]),'sentencia':([0,2,],[3,16,]),'declaracion':([0,2,],[5,5,]),'asignacion':([0,2,],[6,6,]),'declaracion_valor':([0,2,],[7,7,]),'declaracion_sin_valor':([0,2,],[8,8,]),'tipo':([0,2,],[10,10,]),'expresion':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[21,33,36,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,]),'relacional':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'logica':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expresion_agrupada':([17,18,20,22,32,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',38),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',42),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',47),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',52),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',56),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',60),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',64),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',69),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',73),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',77),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',83),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',87),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',92),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',97),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',102),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',107),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',112),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',117),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',122),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',126),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',131),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',136),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',141),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',146),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',151),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',156),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',160),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',165),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',170),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',175),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',180),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',185),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',190),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',194),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',198),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',202),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',207),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',211),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',215),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',219),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',223),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',227),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',231),
]
