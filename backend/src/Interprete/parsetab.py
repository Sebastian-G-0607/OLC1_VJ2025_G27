
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftMASMENOSleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUErightNOTleftXORANDAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA CONTINUE DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE WHILE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencias : sentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionsentencia : sentenciaIfsentencia : BREAK PUNTO_Y_COMAsentencia : CONTINUE PUNTO_Y_COMAsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : IDENTIFICADORrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfsentencia : SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DERcases : cases casecases : casecase : CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcase : DEFAULT DOS_PUNTOS sentenciascondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STRsentencia : FOR PARENTESIS_IZQ error PUNTO_Y_COMA condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER\n| FOR PARENTESIS_IZQ inicio_for error PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER\n| FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA error PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER\n| FOR PARENTESIS_IZQ error PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER\n| FOR error LLAVE_IZQ sentencias LLAVE_DERsentencias : sentencias error\n| errorsentencia : error'
    
_lr_action_items = {'error':([0,2,3,4,6,7,8,12,16,17,25,26,28,29,31,33,61,63,64,67,68,69,70,75,101,103,108,124,125,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[4,26,-3,-79,-6,-7,-8,32,-22,-23,-2,-78,-9,-10,62,4,97,-14,-15,4,26,-19,-20,-25,26,-21,-5,4,136,4,-77,4,-24,26,26,26,-11,-76,-61,4,-57,4,4,4,-13,4,26,26,26,26,4,26,4,-60,-12,-75,-74,26,26,-73,-9,-58,]),'PRINT':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[5,5,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,5,5,5,-19,-20,-25,5,-21,-5,5,5,-77,5,-24,5,5,5,-11,-76,-61,5,-57,5,5,5,-13,5,5,5,5,5,5,5,5,-60,-12,-75,-74,5,5,-73,-9,-58,]),'BREAK':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[9,9,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,9,9,9,-19,-20,-25,9,-21,-5,9,9,-77,9,-24,9,9,9,-11,-76,-61,9,-57,9,9,9,-13,9,9,9,9,9,9,182,9,-60,-12,-75,-74,9,9,-73,-9,-58,]),'CONTINUE':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[10,10,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,10,10,10,-19,-20,-25,10,-21,-5,10,10,-77,10,-24,10,10,10,-11,-76,-61,10,-57,10,10,10,-13,10,10,10,10,10,10,10,10,-60,-12,-75,-74,10,10,-73,-9,-58,]),'WHILE':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,102,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[11,11,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,11,11,11,-19,-20,-25,11,130,-21,-5,11,11,-77,11,-24,11,11,11,-11,-76,-61,11,-57,11,11,11,-13,11,11,11,11,11,11,11,11,-60,-12,-75,-74,11,11,-73,-9,-58,]),'FOR':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[12,12,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,12,12,12,-19,-20,-25,12,-21,-5,12,12,-77,12,-24,12,12,12,-11,-76,-61,12,-57,12,12,12,-13,12,12,12,12,12,12,12,12,-60,-12,-75,-74,12,12,-73,-9,-58,]),'DO':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[13,13,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,13,13,13,-19,-20,-25,13,-21,-5,13,13,-77,13,-24,13,13,13,-11,-76,-61,13,-57,13,13,13,-13,13,13,13,13,13,13,13,13,-60,-12,-75,-74,13,13,-73,-9,-58,]),'IDENTIFICADOR':([0,2,3,4,6,7,8,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,36,37,38,40,42,53,61,63,64,66,67,68,69,70,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,101,103,108,124,125,126,128,129,132,133,134,139,140,141,144,146,147,152,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[14,14,-3,-79,-6,-7,-8,-22,-23,39,-68,-69,-70,-71,-72,-2,-78,45,-9,-10,60,65,14,45,45,60,45,45,45,60,-14,-15,100,14,14,-19,-20,45,-25,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,60,14,-21,-5,14,137,137,14,-77,14,-24,14,137,14,60,45,14,-11,45,-76,-61,14,-57,14,14,14,-13,14,14,14,14,14,14,14,14,-60,-12,-75,-74,14,14,-73,-9,-58,]),'SWITCH':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[15,15,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,15,15,15,-19,-20,-25,15,-21,-5,15,15,-77,15,-24,15,15,15,-11,-76,-61,15,-57,15,15,15,-13,15,15,15,15,15,15,15,15,-60,-12,-75,-74,15,15,-73,-9,-58,]),'IF':([0,2,3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[18,18,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,18,18,18,-19,-20,-25,18,-21,-5,18,18,-77,18,-24,18,18,18,-11,-76,-61,18,-57,18,18,18,-13,18,18,18,18,18,18,18,18,18,-60,-12,-75,-74,18,18,-73,-9,-58,]),'TIPO_INT':([0,2,3,4,6,7,8,16,17,25,26,28,29,31,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[20,20,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,20,20,20,20,-19,-20,-25,20,-21,-5,20,20,-77,20,-24,20,20,20,-11,-76,-61,20,-57,20,20,20,-13,20,20,20,20,20,20,20,20,-60,-12,-75,-74,20,20,-73,-9,-58,]),'TIPO_FLOAT':([0,2,3,4,6,7,8,16,17,25,26,28,29,31,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[21,21,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,21,21,21,21,-19,-20,-25,21,-21,-5,21,21,-77,21,-24,21,21,21,-11,-76,-61,21,-57,21,21,21,-13,21,21,21,21,21,21,21,21,-60,-12,-75,-74,21,21,-73,-9,-58,]),'TIPO_BOOL':([0,2,3,4,6,7,8,16,17,25,26,28,29,31,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[22,22,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,22,22,22,22,-19,-20,-25,22,-21,-5,22,22,-77,22,-24,22,22,22,-11,-76,-61,22,-57,22,22,22,-13,22,22,22,22,22,22,22,22,-60,-12,-75,-74,22,22,-73,-9,-58,]),'TIPO_CHAR':([0,2,3,4,6,7,8,16,17,25,26,28,29,31,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[23,23,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,23,23,23,23,-19,-20,-25,23,-21,-5,23,23,-77,23,-24,23,23,23,-11,-76,-61,23,-57,23,23,23,-13,23,23,23,23,23,23,23,23,-60,-12,-75,-74,23,23,-73,-9,-58,]),'TIPO_STR':([0,2,3,4,6,7,8,16,17,25,26,28,29,31,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,146,147,155,157,160,161,162,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,183,185,186,187,],[24,24,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,24,24,24,24,-19,-20,-25,24,-21,-5,24,24,-77,24,-24,24,24,24,-11,-76,-61,24,-57,24,24,24,-13,24,24,24,24,24,24,24,24,-60,-12,-75,-74,24,24,-73,-9,-58,]),'$end':([0,1,2,3,4,6,7,8,16,17,25,26,28,29,69,70,75,103,108,129,133,147,155,157,161,167,177,178,179,180,185,187,],[-4,0,-1,-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,-19,-20,-25,-21,-5,-77,-24,-11,-76,-61,-57,-13,-60,-12,-75,-74,-73,-58,]),'LLAVE_DER':([3,4,6,7,8,16,17,25,26,28,29,33,67,68,69,70,75,101,103,108,124,128,129,132,133,134,140,142,143,146,147,155,157,158,160,161,162,163,165,167,169,171,172,173,174,176,177,178,179,180,181,183,184,185,186,187,],[-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,-4,-4,102,-19,-20,-25,129,-21,-5,-4,-4,-77,-4,-24,147,155,157,-63,161,-11,-76,-61,-62,-4,-57,-4,-4,-4,-13,-65,178,179,180,-4,-4,-60,-12,-75,-74,185,-59,187,-73,-64,-58,]),'CASE':([3,4,6,7,8,16,17,25,26,28,29,69,70,75,103,108,129,131,133,142,143,147,155,157,158,160,161,167,169,177,178,179,180,185,186,187,],[-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,-19,-20,-25,-21,-5,-77,144,-24,144,-63,-11,-76,-61,-62,-4,-57,-13,-65,-60,-12,-75,-74,-73,-64,-58,]),'DEFAULT':([3,4,6,7,8,16,17,25,26,28,29,69,70,75,103,108,129,131,133,142,143,147,155,157,158,160,161,167,169,177,178,179,180,185,186,187,],[-3,-79,-6,-7,-8,-22,-23,-2,-78,-9,-10,-19,-20,-25,-21,-5,-77,145,-24,145,-63,-11,-76,-61,-62,-4,-57,-13,-65,-60,-12,-75,-74,-73,-64,-58,]),'PARENTESIS_IZQ':([5,11,12,15,18,27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,130,133,141,144,152,],[27,30,31,37,38,40,40,40,40,40,40,40,40,40,-14,-15,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-21,141,-24,40,40,40,]),'PUNTO_Y_COMA':([9,10,34,35,39,43,44,45,46,47,48,49,50,51,52,55,56,58,59,60,62,71,77,93,94,96,97,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,182,],[28,29,69,70,75,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-66,-67,-46,-47,-48,98,103,108,-31,-44,125,126,133,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,139,186,]),'LLAVE_IZQ':([13,32,95,99,104,105,148,149,153,166,170,],[33,67,124,128,131,132,162,163,165,174,176,]),'INCREMENTO':([14,137,],[34,150,]),'DECREMENTO':([14,137,],[35,151,]),'IGUAL':([14,39,65,100,137,],[36,74,36,74,152,]),'MENOS':([27,30,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,63,64,71,72,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,103,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,133,141,144,152,159,164,],[42,42,42,42,42,42,79,42,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,42,-34,-33,79,-46,-47,-35,42,-14,-15,79,79,42,79,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,79,-44,42,-21,79,-56,-26,-27,79,79,79,79,-36,-37,-38,-39,-40,-41,-42,79,-45,-24,42,42,42,79,79,]),'ENTERO':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[46,46,46,46,46,46,46,46,46,-14,-15,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-21,-24,46,46,46,]),'FLOTANTE':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[47,47,47,47,47,47,47,47,47,-14,-15,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-21,-24,47,47,47,]),'TRUE':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[48,58,48,48,58,48,48,48,58,-14,-15,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,58,-21,-24,58,48,48,]),'FALSE':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[49,59,49,49,59,49,49,49,59,-14,-15,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,59,-21,-24,59,49,49,]),'CADENA':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[50,50,50,50,50,50,50,50,50,-14,-15,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-21,-24,50,50,50,]),'CARACTER':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[51,51,51,51,51,51,51,51,51,-14,-15,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-21,-24,51,51,51,]),'NOT':([27,30,36,37,38,40,42,53,61,63,64,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,103,133,141,144,152,],[53,53,53,53,53,53,53,53,53,-14,-15,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-21,-24,53,53,53,]),'PARENTESIS_DER':([41,43,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,62,72,73,76,93,94,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,135,136,138,150,151,154,156,164,],[77,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,95,-66,-67,-46,-47,-48,99,104,105,107,-31,-44,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,148,149,153,-16,-17,166,167,-18,]),'MAS':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[78,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,78,-46,-47,-35,78,78,78,78,-44,78,-56,-26,-27,78,78,78,78,-36,-37,-38,-39,-40,-41,-42,78,-45,78,78,]),'MULTIPLICACION':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[80,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,80,-46,-47,-35,80,80,80,80,-44,80,-56,-26,-27,-28,-29,80,80,-36,-37,-38,-39,-40,-41,-42,80,-45,80,80,]),'DIVISION':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[81,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,81,-46,-47,-35,81,81,81,81,-44,81,-56,-26,-27,-28,-29,81,81,-36,-37,-38,-39,-40,-41,-42,81,-45,81,81,]),'POTENCIA':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[82,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,82,-46,-47,-35,82,82,82,82,-44,82,-56,-26,-27,-28,-29,None,82,-36,-37,-38,-39,-40,-41,-42,82,-45,82,82,]),'MODULO':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[83,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,83,-46,-47,-35,83,83,83,-31,-44,83,-56,-26,-27,-28,-29,-30,83,-36,-37,-38,-39,-40,-41,-42,83,-45,83,83,]),'IGUALQUE':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[84,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,84,-46,-47,-35,84,84,84,84,-44,84,-56,84,84,84,84,84,84,-36,-37,-38,-39,-40,-41,-42,84,-45,84,84,]),'DIFERENTEQUE':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[85,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,85,-46,-47,-35,85,85,85,85,-44,85,-56,85,85,85,85,85,85,-36,-37,-38,-39,-40,-41,-42,85,-45,85,85,]),'MAYORQUE':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[86,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,86,-46,-47,-35,86,86,86,86,-44,86,-56,86,86,86,86,86,86,86,86,-38,-39,-40,-41,-42,86,-45,86,86,]),'MAYORIGUALQUE':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[87,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,87,-46,-47,-35,87,87,87,87,-44,87,-56,87,87,87,87,87,87,87,87,87,-39,87,-41,-42,87,-45,87,87,]),'MENORQUE':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[88,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,88,-46,-47,-35,88,88,88,88,-44,88,-56,88,88,88,88,88,88,88,88,-38,-39,-40,-41,-42,88,-45,88,88,]),'MENORIGUALQUE':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[89,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,89,-46,-47,-35,89,89,89,89,-44,89,-56,89,89,89,89,89,89,89,89,89,-39,89,-41,-42,89,-45,89,89,]),'AND':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[90,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,90,-46,-47,-35,90,90,90,90,90,90,-56,90,90,90,90,90,90,90,90,90,90,90,90,-42,90,-45,90,90,]),'OR':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[91,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,91,-46,-47,-35,91,91,91,-31,-44,91,-56,-26,-27,-28,-29,-30,91,-36,-37,-38,-39,-40,-41,-42,91,-45,91,91,]),'XOR':([41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,71,72,76,93,94,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,159,164,],[92,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,92,-46,-47,-35,92,92,92,92,92,92,-56,92,92,92,92,92,92,92,92,92,92,92,92,-42,92,-45,92,92,]),'DOS_PUNTOS':([43,44,45,46,47,48,49,50,51,52,93,94,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,145,159,],[-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-31,-44,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,160,168,]),'ELSE':([161,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,33,67,124,128,132,160,162,163,165,168,174,176,],[2,68,101,134,140,146,169,171,172,173,175,181,183,]),'sentencia':([0,2,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,171,172,173,174,175,176,181,183,],[3,25,3,3,25,25,3,3,3,25,25,25,3,3,3,3,3,25,25,25,25,3,25,3,25,25,]),'declaracion':([0,2,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,171,172,173,174,175,176,181,183,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion':([0,2,31,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,171,172,173,174,175,176,181,183,],[7,7,63,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'sentenciaIf':([0,2,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,170,171,172,173,174,175,176,181,183,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,177,8,8,8,8,8,8,8,8,]),'declaracion_valor':([0,2,31,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,171,172,173,174,175,176,181,183,],[16,16,64,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'declaracion_sin_valor':([0,2,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,171,172,173,174,175,176,181,183,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'tipo':([0,2,31,33,67,68,101,124,128,132,134,140,146,160,162,163,165,168,169,171,172,173,174,175,176,181,183,],[19,19,66,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expresion':([27,30,36,37,38,40,42,53,61,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,141,144,152,],[41,57,71,72,57,76,93,94,57,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,57,57,159,164,]),'relacional':([27,30,36,37,38,40,42,53,61,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,141,144,152,],[43,56,43,43,56,43,43,43,56,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,56,56,43,43,]),'logica':([27,30,36,37,38,40,42,53,61,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,141,144,152,],[44,55,44,44,55,44,44,44,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,55,44,44,]),'expresion_agrupada':([27,30,36,37,38,40,42,53,61,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,141,144,152,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'condicion':([30,38,61,98,141,],[54,73,96,127,156,]),'inicio_for':([31,],[61,]),'actualizacion':([125,126,139,],[135,138,154,]),'cases':([131,],[142,]),'case':([131,142,],[143,158,]),'selse':([176,],[184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',59),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',65),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',70),
  ('sentencias -> <empty>','sentencias',0,'p_sentencia_empty','parser.py',77),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',81),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',87),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',91),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',95),
  ('sentencia -> BREAK PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_break','parser.py',99),
  ('sentencia -> CONTINUE PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_continue','parser.py',104),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',109),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',114),
  ('sentencia -> DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DER','sentencia',8,'p_sentencia_do_while','parser.py',119),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',124),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',129),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',133),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',138),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',143),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',148),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',153),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',158),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',163),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',167),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',171),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',175),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',179),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',186),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',191),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',196),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',201),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',206),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',211),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',216),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',220),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',224),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',229),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',234),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',239),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',244),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',249),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',254),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',259),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',264),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',269),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',274),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',279),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',284),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',289),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',294),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',299),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',304),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',308),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',312),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',316),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',321),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',325),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',329),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',333),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',338),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',342),
  ('sentencia -> SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DER','sentencia',7,'p_sentencia_switch','parser.py',346),
  ('cases -> cases case','cases',2,'p_cases','parser.py',351),
  ('cases -> case','cases',1,'p_cases_unico','parser.py',357),
  ('case -> CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',6,'p_case','parser.py',363),
  ('case -> DEFAULT DOS_PUNTOS sentencias','case',3,'p_case_default','parser.py',368),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',373),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',378),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',383),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',387),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',391),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',395),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',399),
  ('sentencia -> FOR PARENTESIS_IZQ error PUNTO_Y_COMA condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',11,'p_sentencia_for_error','parser.py',403),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for error PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for_error','parser.py',404),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA error PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for_error','parser.py',405),
  ('sentencia -> FOR PARENTESIS_IZQ error PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_for_error','parser.py',406),
  ('sentencia -> FOR error LLAVE_IZQ sentencias LLAVE_DER','sentencia',5,'p_sentencia_for_error','parser.py',407),
  ('sentencias -> sentencias error','sentencias',2,'p_sentencias_error','parser.py',465),
  ('sentencias -> error','sentencias',1,'p_sentencias_error','parser.py',466),
  ('sentencia -> error','sentencia',1,'p_sentencia_error','parser.py',474),
]
