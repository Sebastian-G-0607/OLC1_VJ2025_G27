
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftMASMENOSleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUErightNOTleftXORleftANDAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA CONTINUE DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE WHILE XORsentencias_bucle : sentencias_bucle sentencia_buclesentencias_bucle : sentencia_buclesentencia_bucle : sentenciaprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencias : sentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionsentencia : sentenciaIfsentencia : BREAK PUNTO_Y_COMAsentencia : CONTINUE PUNTO_Y_COMAsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : IDENTIFICADORrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfsentencia : SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DERcases : cases casecases : casecase : CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcase : DEFAULT DOS_PUNTOS sentencias BREAK PUNTO_Y_COMAcondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[4,4,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,4,4,-6,-22,-23,-28,-5,-24,-8,4,4,-27,4,4,-14,-64,4,-60,4,-16,4,4,4,4,4,-63,-15,-12,4,-12,-61,]),'BREAK':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[8,8,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,8,8,-6,-22,-23,-28,-5,-24,-8,8,8,-27,8,8,-14,-64,8,-60,8,-16,8,151,8,155,8,-63,-15,-12,8,-12,-61,]),'CONTINUE':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[9,9,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,9,9,-6,-22,-23,-28,-5,-24,-8,9,9,-27,9,9,-14,-64,9,-60,9,-16,9,9,9,9,9,-63,-15,-12,9,-12,-61,]),'WHILE':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,94,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[10,10,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,10,10,-6,-22,-23,-28,119,-5,-24,-8,10,10,-27,10,10,-14,-64,10,-60,10,-16,10,10,10,10,10,-63,-15,-12,10,-12,-61,]),'FOR':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[11,11,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,11,11,-6,-22,-23,-28,-5,-24,-8,11,11,-27,11,11,-14,-64,11,-60,11,-16,11,11,11,11,11,-63,-15,-12,11,-12,-61,]),'DO':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[12,12,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,12,12,-6,-22,-23,-28,-5,-24,-8,12,12,-27,12,12,-14,-64,12,-60,12,-16,12,12,12,12,12,-63,-15,-12,12,-12,-61,]),'IDENTIFICADOR':([0,1,2,3,5,6,7,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,35,37,39,50,58,59,60,62,63,64,65,66,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,95,96,101,117,118,121,122,123,126,129,131,132,136,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[13,13,-2,-3,-9,-10,-11,-25,-26,36,-71,-72,-73,-74,-75,-1,42,-12,-13,57,61,13,42,42,57,42,42,42,57,-17,-18,93,13,-6,-22,-23,42,-28,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-5,-24,-8,13,125,13,-27,13,57,42,13,-14,42,-64,13,-60,13,-16,13,13,13,13,13,-63,-15,-12,13,-12,-61,]),'SWITCH':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[14,14,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,14,14,-6,-22,-23,-28,-5,-24,-8,14,14,-27,14,14,-14,-64,14,-60,14,-16,14,14,14,14,14,-63,-15,-12,14,-12,-61,]),'IF':([0,1,2,3,5,6,7,15,16,24,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,148,149,150,152,153,154,156,157,159,160,],[17,17,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,17,17,-6,-22,-23,-28,-5,-24,-8,17,17,-27,17,17,-14,-64,17,-60,17,-16,17,17,17,17,17,17,-63,-15,-12,17,-12,-61,]),'TIPO_INT':([0,1,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[19,19,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,19,19,19,-6,-22,-23,-28,-5,-24,-8,19,19,-27,19,19,-14,-64,19,-60,19,-16,19,19,19,19,19,-63,-15,-12,19,-12,-61,]),'TIPO_FLOAT':([0,1,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[20,20,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,20,20,20,-6,-22,-23,-28,-5,-24,-8,20,20,-27,20,20,-14,-64,20,-60,20,-16,20,20,20,20,20,-63,-15,-12,20,-12,-61,]),'TIPO_BOOL':([0,1,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[21,21,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,21,21,21,-6,-22,-23,-28,-5,-24,-8,21,21,-27,21,21,-14,-64,21,-60,21,-16,21,21,21,21,21,-63,-15,-12,21,-12,-61,]),'TIPO_CHAR':([0,1,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[22,22,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,22,22,22,-6,-22,-23,-28,-5,-24,-8,22,22,-27,22,22,-14,-64,22,-60,22,-16,22,22,22,22,22,-63,-15,-12,22,-12,-61,]),'TIPO_STR':([0,1,2,3,5,6,7,15,16,24,26,27,29,30,63,64,65,66,71,95,96,101,117,121,122,123,131,132,138,141,142,143,145,146,147,149,150,152,153,154,156,157,159,160,],[23,23,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,23,23,23,-6,-22,-23,-28,-5,-24,-8,23,23,-27,23,23,-14,-64,23,-60,23,-16,23,23,23,23,23,-63,-15,-12,23,-12,-61,]),'$end':([1,2,3,5,6,7,15,16,24,26,27,65,66,71,96,101,122,132,138,142,145,153,154,160,],[0,-2,-3,-9,-10,-11,-25,-26,-1,-12,-13,-22,-23,-28,-24,-8,-27,-14,-64,-60,-16,-63,-15,-61,]),'PARENTESIS_IZQ':([4,10,11,14,17,25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,119,122,126,129,136,],[25,28,29,34,35,37,37,37,37,37,37,37,37,37,-17,-18,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-24,126,-27,37,37,37,]),'LLAVE_DER':([5,6,7,15,16,26,27,30,63,64,65,66,71,95,96,101,117,121,122,123,127,128,131,132,138,139,142,143,145,149,152,153,154,156,157,158,159,160,],[-9,-10,-11,-25,-26,-12,-13,-7,94,-6,-22,-23,-28,-5,-24,-8,-7,-7,-27,132,138,-66,142,-14,-64,-65,-60,-7,-16,154,-7,-63,-15,-68,-62,160,-67,-61,]),'PUNTO_Y_COMA':([8,9,31,32,36,40,41,42,43,44,45,46,47,48,49,52,53,55,56,57,67,73,89,90,92,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,151,155,],[26,27,65,66,71,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-69,-70,-49,-50,-51,96,101,-34,-47,118,122,-59,-29,-30,-31,-32,-33,-35,-39,-40,-41,-42,-43,-44,-45,-46,-48,156,159,]),'LLAVE_IZQ':([12,91,97,98,133,148,],[30,117,120,121,143,152,]),'INCREMENTO':([13,125,],[31,134,]),'DECREMENTO':([13,125,],[32,135,]),'IGUAL':([13,36,61,93,125,],[33,70,33,70,136,]),'MENOS':([25,28,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,67,68,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,126,129,136,140,144,],[39,39,39,39,39,39,75,39,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,39,-37,-36,75,-49,-50,-38,39,-17,-18,75,75,39,75,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,75,-47,-24,75,-59,-29,-30,75,75,75,75,-39,-40,-41,-42,-43,-44,-45,75,-48,-27,39,39,39,75,75,]),'ENTERO':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[43,43,43,43,43,43,43,43,43,-17,-18,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-24,-27,43,43,43,]),'FLOTANTE':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[44,44,44,44,44,44,44,44,44,-17,-18,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-24,-27,44,44,44,]),'TRUE':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[45,55,45,45,55,45,45,45,55,-17,-18,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-24,-27,55,45,45,]),'FALSE':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[46,56,46,46,56,46,46,46,56,-17,-18,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-24,-27,56,46,46,]),'CADENA':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[47,47,47,47,47,47,47,47,47,-17,-18,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-24,-27,47,47,47,]),'CARACTER':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[48,48,48,48,48,48,48,48,48,-17,-18,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-24,-27,48,48,48,]),'NOT':([25,28,33,34,35,37,39,50,58,59,60,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,122,126,129,136,],[50,50,50,50,50,50,50,50,50,-17,-18,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-24,-27,50,50,50,]),'PARENTESIS_DER':([38,40,41,42,43,44,45,46,47,48,49,51,52,53,55,56,57,68,69,72,89,90,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,134,135,137,144,],[73,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,91,-69,-70,-49,-50,-51,97,98,100,-34,-47,-59,-29,-30,-31,-32,-33,-35,-39,-40,-41,-42,-43,-44,-45,-46,-48,133,-19,-20,145,-21,]),'MAS':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[74,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,74,-49,-50,-38,74,74,74,74,-47,74,-59,-29,-30,74,74,74,74,-39,-40,-41,-42,-43,-44,-45,74,-48,74,74,]),'MULTIPLICACION':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[76,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,76,-49,-50,-38,76,76,76,76,-47,76,-59,-29,-30,-31,-32,76,76,-39,-40,-41,-42,-43,-44,-45,76,-48,76,76,]),'DIVISION':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[77,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,77,-49,-50,-38,77,77,77,77,-47,77,-59,-29,-30,-31,-32,77,77,-39,-40,-41,-42,-43,-44,-45,77,-48,77,77,]),'POTENCIA':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[78,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,78,-49,-50,-38,78,78,78,78,-47,78,-59,-29,-30,-31,-32,None,78,-39,-40,-41,-42,-43,-44,-45,78,-48,78,78,]),'MODULO':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[79,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,79,-49,-50,-38,79,79,79,-34,-47,79,-59,-29,-30,-31,-32,-33,79,-39,-40,-41,-42,-43,-44,-45,79,-48,79,79,]),'IGUALQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[80,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,80,-49,-50,-38,80,80,80,80,-47,80,-59,80,80,80,80,80,80,-39,-40,-41,-42,-43,-44,-45,80,-48,80,80,]),'DIFERENTEQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[81,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,81,-49,-50,-38,81,81,81,81,-47,81,-59,81,81,81,81,81,81,-39,-40,-41,-42,-43,-44,-45,81,-48,81,81,]),'MAYORQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[82,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,82,-49,-50,-38,82,82,82,82,-47,82,-59,82,82,82,82,82,82,82,82,-41,-42,-43,-44,-45,82,-48,82,82,]),'MAYORIGUALQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[83,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,83,-49,-50,-38,83,83,83,83,-47,83,-59,83,83,83,83,83,83,83,83,83,-42,83,-44,-45,83,-48,83,83,]),'MENORQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[84,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,84,-49,-50,-38,84,84,84,84,-47,84,-59,84,84,84,84,84,84,84,84,-41,-42,-43,-44,-45,84,-48,84,84,]),'MENORIGUALQUE':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[85,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,85,-49,-50,-38,85,85,85,85,-47,85,-59,85,85,85,85,85,85,85,85,85,-42,85,-44,-45,85,-48,85,85,]),'AND':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[86,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,86,-49,-50,-38,86,86,86,86,86,86,-59,86,86,86,86,86,86,86,86,86,86,86,86,-45,86,86,86,86,]),'OR':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[87,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,87,-49,-50,-38,87,87,87,-34,-47,87,-59,-29,-30,-31,-32,-33,87,-39,-40,-41,-42,-43,-44,-45,87,-48,87,87,]),'XOR':([38,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,67,68,72,89,90,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,140,144,],[88,-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-37,-36,88,-49,-50,-38,88,88,88,88,88,88,-59,88,88,88,88,88,88,88,88,88,88,88,88,-45,88,-48,88,88,]),'DOS_PUNTOS':([40,41,42,43,44,45,46,47,48,49,89,90,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,130,140,],[-36,-37,-38,-52,-53,-49,-50,-56,-57,-58,-34,-47,-59,-29,-30,-31,-32,-33,-35,-39,-40,-41,-42,-43,-44,-45,-46,-48,141,146,]),'CASE':([120,127,128,139,156,159,],[129,129,-66,-65,-68,-67,]),'DEFAULT':([120,127,128,139,156,159,],[130,130,-66,-65,-68,-67,]),'ELSE':([142,],[148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias_bucle':([0,],[1,]),'sentencia_bucle':([0,1,],[2,24,]),'sentencia':([0,1,30,63,117,121,123,131,141,143,146,147,149,150,152,157,],[3,3,64,95,64,64,95,95,64,64,64,95,95,95,64,95,]),'declaracion':([0,1,30,63,117,121,123,131,141,143,146,147,149,150,152,157,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,1,29,30,63,117,121,123,131,141,143,146,147,149,150,152,157,],[6,6,59,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'sentenciaIf':([0,1,30,63,117,121,123,131,141,143,146,147,148,149,150,152,157,],[7,7,7,7,7,7,7,7,7,7,7,7,153,7,7,7,7,]),'declaracion_valor':([0,1,29,30,63,117,121,123,131,141,143,146,147,149,150,152,157,],[15,15,60,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaracion_sin_valor':([0,1,30,63,117,121,123,131,141,143,146,147,149,150,152,157,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'tipo':([0,1,29,30,63,117,121,123,131,141,143,146,147,149,150,152,157,],[18,18,62,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expresion':([25,28,33,34,35,37,39,50,58,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,126,129,136,],[38,54,67,68,54,72,89,90,54,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,54,140,144,]),'relacional':([25,28,33,34,35,37,39,50,58,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,126,129,136,],[40,53,40,40,53,40,40,40,53,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,53,40,40,]),'logica':([25,28,33,34,35,37,39,50,58,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,126,129,136,],[41,52,41,41,52,41,41,41,52,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,52,41,41,]),'expresion_agrupada':([25,28,33,34,35,37,39,50,58,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,126,129,136,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'condicion':([28,35,58,126,],[51,69,92,137,]),'inicio_for':([29,],[58,]),'sentencias':([30,117,121,141,143,146,152,],[63,123,131,147,149,150,157,]),'actualizacion':([118,],[124,]),'cases':([120,],[127,]),'case':([120,127,],[128,139,]),'selse':([152,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias_bucle","S'",1,None,None,None),
  ('sentencias_bucle -> sentencias_bucle sentencia_bucle','sentencias_bucle',2,'p_sentencias_bucle','parser.py',60),
  ('sentencias_bucle -> sentencia_bucle','sentencias_bucle',1,'p_sentencias_bucle_unica','parser.py',65),
  ('sentencia_bucle -> sentencia','sentencia_bucle',1,'p_sentencia_bucle','parser.py',70),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',85),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',89),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',94),
  ('sentencias -> <empty>','sentencias',0,'p_sentencia_empty','parser.py',99),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',103),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',107),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',111),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',115),
  ('sentencia -> BREAK PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_break','parser.py',119),
  ('sentencia -> CONTINUE PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_continue','parser.py',124),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',129),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',134),
  ('sentencia -> DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DER','sentencia',8,'p_sentencia_do_while','parser.py',139),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',144),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',149),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',153),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',158),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',163),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',168),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',173),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',178),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',183),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',187),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',191),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',195),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',199),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',204),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',209),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',214),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',219),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',224),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',229),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',234),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',238),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',242),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',247),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',252),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',257),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',262),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',267),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',272),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',277),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',282),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',287),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',292),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',297),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',302),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',307),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',312),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',317),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',322),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',326),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',330),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',334),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',339),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',343),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',347),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',351),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',356),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',360),
  ('sentencia -> SWITCH PARENTESIS_IZQ expresion PARENTESIS_DER LLAVE_IZQ cases LLAVE_DER','sentencia',7,'p_sentencia_switch','parser.py',364),
  ('cases -> cases case','cases',2,'p_cases','parser.py',369),
  ('cases -> case','cases',1,'p_cases_unico','parser.py',375),
  ('case -> CASE expresion DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',6,'p_case','parser.py',381),
  ('case -> DEFAULT DOS_PUNTOS sentencias BREAK PUNTO_Y_COMA','case',5,'p_case_default','parser.py',386),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',391),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',396),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',401),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',405),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',409),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',413),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',417),
]
