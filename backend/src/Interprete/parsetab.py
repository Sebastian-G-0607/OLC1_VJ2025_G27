
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUEAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NEGACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE WHILE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionsentencia : sentenciaIfsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : IDENTIFICADORrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfcondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,7,11,12,20,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[4,4,-3,-5,-6,-7,-18,-19,-2,-15,-16,-21,-17,-4,4,4,-20,4,4,-8,-53,4,4,4,-56,-9,4,-54,]),'WHILE':([0,2,3,5,6,7,11,12,20,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[8,8,-3,-5,-6,-7,-18,-19,-2,-15,-16,-21,-17,-4,8,8,-20,8,8,-8,-53,8,8,8,-56,-9,8,-54,]),'FOR':([0,2,3,5,6,7,11,12,20,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[9,9,-3,-5,-6,-7,-18,-19,-2,-15,-16,-21,-17,-4,9,9,-20,9,9,-8,-53,9,9,9,-56,-9,9,-54,]),'IDENTIFICADOR':([0,2,3,5,6,7,11,12,14,15,16,17,18,19,20,21,22,23,26,27,29,31,42,50,51,52,54,55,56,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,87,103,104,105,106,107,110,111,115,116,117,120,121,122,123,124,126,],[10,10,-3,-5,-6,-7,-18,-19,28,-59,-60,-61,-62,-63,-2,34,49,53,34,49,34,34,34,49,-10,-11,82,-15,-16,34,-21,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-17,-4,10,109,10,-20,10,10,-8,34,-53,10,10,10,-56,-9,10,-54,]),'IF':([0,2,3,5,6,7,11,12,20,55,56,60,83,87,103,105,106,107,110,111,116,117,119,120,121,122,123,124,126,],[13,13,-3,-5,-6,-7,-18,-19,-2,-15,-16,-21,-17,-4,13,13,-20,13,13,-8,-53,13,13,13,13,-56,-9,13,-54,]),'TIPO_INT':([0,2,3,5,6,7,11,12,20,23,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[15,15,-3,-5,-6,-7,-18,-19,-2,15,-15,-16,-21,-17,-4,15,15,-20,15,15,-8,-53,15,15,15,-56,-9,15,-54,]),'TIPO_FLOAT':([0,2,3,5,6,7,11,12,20,23,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[16,16,-3,-5,-6,-7,-18,-19,-2,16,-15,-16,-21,-17,-4,16,16,-20,16,16,-8,-53,16,16,16,-56,-9,16,-54,]),'TIPO_BOOL':([0,2,3,5,6,7,11,12,20,23,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[17,17,-3,-5,-6,-7,-18,-19,-2,17,-15,-16,-21,-17,-4,17,17,-20,17,17,-8,-53,17,17,17,-56,-9,17,-54,]),'TIPO_CHAR':([0,2,3,5,6,7,11,12,20,23,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[18,18,-3,-5,-6,-7,-18,-19,-2,18,-15,-16,-21,-17,-4,18,18,-20,18,18,-8,-53,18,18,18,-56,-9,18,-54,]),'TIPO_STR':([0,2,3,5,6,7,11,12,20,23,55,56,60,83,87,103,105,106,107,110,111,116,117,120,121,122,123,124,126,],[19,19,-3,-5,-6,-7,-18,-19,-2,19,-15,-16,-21,-17,-4,19,19,-20,19,19,-8,-53,19,19,19,-56,-9,19,-54,]),'$end':([1,2,3,5,6,7,11,12,20,55,56,60,83,87,106,111,116,122,123,126,],[0,-1,-3,-5,-6,-7,-18,-19,-2,-15,-16,-21,-17,-4,-20,-8,-53,-56,-9,-54,]),'LLAVE_DER':([3,5,6,7,11,12,20,55,56,60,83,87,106,107,110,111,116,120,122,123,124,125,126,],[-3,-5,-6,-7,-18,-19,-2,-15,-16,-21,-17,-4,-20,111,116,-8,-53,123,-56,-9,-55,126,-54,]),'PARENTESIS_IZQ':([4,8,9,13,21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[21,22,23,27,29,29,29,29,29,29,29,29,-10,-11,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-17,-20,29,]),'INCREMENTO':([10,109,],[24,113,]),'DECREMENTO':([10,109,],[25,114,]),'IGUAL':([10,28,53,82,109,],[26,59,26,59,115,]),'MENOS':([21,22,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,57,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,115,118,],[31,31,31,31,31,64,31,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,31,-30,-29,64,-42,-43,-31,31,-10,-11,64,31,64,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-27,64,-17,64,-52,64,64,-24,-25,-26,64,-32,-33,-34,-35,-36,-37,64,64,64,-20,31,64,]),'ENTERO':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[35,35,35,35,35,35,35,35,-10,-11,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-17,-20,35,]),'FLOTANTE':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[36,36,36,36,36,36,36,36,-10,-11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-17,-20,36,]),'TRUE':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[37,47,37,47,37,37,37,47,-10,-11,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-17,-20,37,]),'FALSE':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[38,48,38,48,38,38,38,48,-10,-11,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-17,-20,38,]),'CADENA':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[39,39,39,39,39,39,39,39,-10,-11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-17,-20,39,]),'CARACTER':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[40,40,40,40,40,40,40,40,-10,-11,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-17,-20,40,]),'NOT':([21,22,26,27,29,31,42,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,106,115,],[42,42,42,42,42,42,42,42,-10,-11,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-17,-20,42,]),'PUNTO_Y_COMA':([24,25,28,32,33,34,35,36,37,38,39,40,41,44,45,47,48,49,57,62,78,79,81,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[55,56,60,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-57,-58,-42,-43,-44,83,87,-27,-40,104,106,-52,-22,-23,-24,-25,-26,-28,-32,-33,-34,-35,-36,-37,-38,-39,-41,]),'PARENTESIS_DER':([30,32,33,34,35,36,37,38,39,40,41,43,44,45,47,48,49,58,61,78,79,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,113,114,118,],[62,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,80,-57,-58,-42,-43,-44,84,86,-27,-40,-52,-22,-23,-24,-25,-26,-28,-32,-33,-34,-35,-36,-37,-38,-39,-41,112,-12,-13,-14,]),'MAS':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[63,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,63,-42,-43,-31,63,63,-27,63,63,-52,63,63,-24,-25,-26,63,-32,-33,-34,-35,-36,-37,63,63,63,63,]),'MULTIPLICACION':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[65,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,65,-42,-43,-31,65,65,65,65,65,-52,65,65,-24,-25,65,65,-32,-33,-34,-35,-36,-37,65,65,65,65,]),'DIVISION':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[66,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,66,-42,-43,-31,66,66,66,66,66,-52,66,66,-24,-25,66,66,-32,-33,-34,-35,-36,-37,66,66,66,66,]),'POTENCIA':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[67,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,67,-42,-43,-31,67,67,67,67,67,-52,67,67,-24,-25,None,67,-32,-33,-34,-35,-36,-37,67,67,67,67,]),'MODULO':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[68,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,68,-42,-43,-31,68,68,-27,68,68,-52,68,68,-24,-25,-26,68,-32,-33,-34,-35,-36,-37,68,68,68,68,]),'IGUALQUE':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[69,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,69,-42,-43,-31,69,69,69,69,69,-52,69,69,69,69,69,69,-32,-33,-34,-35,-36,-37,69,69,69,69,]),'DIFERENTEQUE':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[70,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,70,-42,-43,-31,70,70,70,70,70,-52,70,70,70,70,70,70,-32,-33,-34,-35,-36,-37,70,70,70,70,]),'MAYORQUE':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[71,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,71,-42,-43,-31,71,71,71,71,71,-52,71,71,71,71,71,71,71,71,-34,-35,-36,-37,71,71,71,71,]),'MAYORIGUALQUE':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[72,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,72,-42,-43,-31,72,72,72,72,72,-52,72,72,72,72,72,72,72,72,72,-35,72,-37,72,72,72,72,]),'MENORQUE':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[73,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,73,-42,-43,-31,73,73,73,73,73,-52,73,73,73,73,73,73,73,73,-34,-35,-36,-37,73,73,73,73,]),'MENORIGUALQUE':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[74,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,74,-42,-43,-31,74,74,74,74,74,-52,74,74,74,74,74,74,74,74,74,-35,74,-37,74,74,74,74,]),'AND':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[75,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,75,-42,-43,-31,75,75,-27,75,75,-52,75,75,-24,-25,-26,75,-32,-33,-34,-35,-36,-37,75,75,75,75,]),'OR':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[76,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,76,-42,-43,-31,76,76,-27,76,76,-52,76,76,-24,-25,-26,76,-32,-33,-34,-35,-36,-37,76,76,76,76,]),'XOR':([30,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,57,61,78,79,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,],[77,-29,-30,-31,-45,-46,-42,-43,-49,-50,-51,-30,-29,77,-42,-43,-31,77,77,-27,77,77,-52,77,77,-24,-25,-26,77,-32,-33,-34,-35,-36,-37,77,77,77,77,]),'LLAVE_IZQ':([80,84,112,119,],[103,105,117,121,]),'ELSE':([116,],[119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,103,105,117,121,],[2,107,110,120,124,]),'sentencia':([0,2,103,105,107,110,117,120,121,124,],[3,20,3,3,20,20,3,20,3,20,]),'declaracion':([0,2,103,105,107,110,117,120,121,124,],[5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,23,103,105,107,110,117,120,121,124,],[6,6,51,6,6,6,6,6,6,6,6,]),'sentenciaIf':([0,2,103,105,107,110,117,119,120,121,124,],[7,7,7,7,7,7,7,122,7,7,7,]),'declaracion_valor':([0,2,23,103,105,107,110,117,120,121,124,],[11,11,52,11,11,11,11,11,11,11,11,]),'declaracion_sin_valor':([0,2,103,105,107,110,117,120,121,124,],[12,12,12,12,12,12,12,12,12,12,]),'tipo':([0,2,23,103,105,107,110,117,120,121,124,],[14,14,54,14,14,14,14,14,14,14,14,]),'expresion':([21,22,26,27,29,31,42,50,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,115,],[30,46,57,46,61,78,79,46,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,118,]),'relacional':([21,22,26,27,29,31,42,50,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,115,],[32,45,32,45,32,32,32,45,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'logica':([21,22,26,27,29,31,42,50,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,115,],[33,44,33,44,33,33,33,44,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expresion_agrupada':([21,22,26,27,29,31,42,50,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,115,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condicion':([22,27,50,],[43,58,81,]),'inicio_for':([23,],[50,]),'actualizacion':([104,],[108,]),'selse':([121,],[125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',47),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',51),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',56),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',61),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',65),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',69),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',73),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',77),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',82),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',87),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',92),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',96),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',101),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',106),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',111),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',116),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',121),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',126),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',130),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',134),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',138),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',142),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',147),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',152),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',157),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',162),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',167),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',172),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',177),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',181),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',185),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',190),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',195),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',200),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',205),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',210),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',215),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',220),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',225),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',230),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',235),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',240),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',245),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',250),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',255),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',260),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',265),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',269),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',273),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',277),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',282),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',286),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',290),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',294),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',299),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',303),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',307),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',312),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',317),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',321),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',325),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',329),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',333),
]
