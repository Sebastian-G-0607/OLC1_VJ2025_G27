
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMENOSnonassocPOTENCIAleftMULTIPLICACIONDIVISIONleftMASMENOSleftIGUALQUEDIFERENTEQUEleftMAYORQUEMENORQUEleftMAYORIGUALQUEMENORIGUALQUErightNOTleftXORANDAND BREAK CADENA CARACTER CASE COMA COMENTARIOLINEA COMENTARIOMULTILINEA CONTINUE DECREMENTO DEFAULT DIFERENTEQUE DIVISION DO DOS_PUNTOS ELSE ENTERO FALSE FLOTANTE FOR IDENTIFICADOR IF IGUAL IGUALQUE INCREMENTO LLAVE_DER LLAVE_IZQ MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICACION NEGACION NOT OR PARENTESIS_DER PARENTESIS_IZQ POTENCIA PRINT PUNTO_Y_COMA SWITCH TIPO_BOOL TIPO_CHAR TIPO_FLOAT TIPO_INT TIPO_STR TRUE WHILE XORprograma : sentenciassentencias : sentencias sentenciasentencias : sentenciasentencias : sentencia : PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMAsentencia : declaracionsentencia : asignacionsentencia : sentenciaIfsentencia : BREAK PUNTO_Y_COMAsentencia : CONTINUE PUNTO_Y_COMAsentencia : WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentencia : DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DERinicio_for : asignacioninicio_for : declaracion_valoractualizacion : IDENTIFICADOR INCREMENTOactualizacion : IDENTIFICADOR DECREMENTOactualizacion : IDENTIFICADOR IGUAL expresionsentencia : IDENTIFICADOR INCREMENTO PUNTO_Y_COMAsentencia : IDENTIFICADOR DECREMENTO PUNTO_Y_COMAasignacion : IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion : declaracion_valordeclaracion : declaracion_sin_valordeclaracion_valor : tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMAdeclaracion_sin_valor : tipo IDENTIFICADOR PUNTO_Y_COMAexpresion : expresion MAS expresionexpresion : expresion MENOS expresionexpresion : expresion MULTIPLICACION expresionexpresion : expresion DIVISION expresionexpresion : expresion POTENCIA expresionexpresion : MENOS expresion %prec UMENOSexpresion : expresion MODULO expresionexpresion : relacionalexpresion : logicaexpresion : IDENTIFICADORrelacional : expresion IGUALQUE expresionrelacional : expresion DIFERENTEQUE expresionrelacional : expresion MAYORQUE expresionrelacional : expresion MAYORIGUALQUE expresionrelacional : expresion MENORQUE expresionrelacional : expresion MENORIGUALQUE expresionlogica : expresion AND expresionlogica : expresion OR expresionlogica : NOT expresionlogica : expresion XOR expresionlogica : TRUElogica : FALSElogica : IDENTIFICADORexpresion : ENTEROexpresion : FLOTANTEexpresion : TRUEexpresion : FALSEexpresion : CADENAexpresion : CARACTERexpresion : expresion_agrupadaexpresion_agrupada : PARENTESIS_IZQ expresion PARENTESIS_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DERsentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DERselse : sentenciassentenciaIf : IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIfcondicion : logicacondicion : relacionaltipo : TIPO_INTtipo : TIPO_FLOATtipo : TIPO_BOOLtipo : TIPO_CHARtipo : TIPO_STR'
    
_lr_action_items = {'PRINT':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[4,4,-3,-6,-7,-8,-22,-23,-2,-9,-10,4,4,-19,-20,-25,-21,-5,4,4,-24,4,4,-11,-57,4,-13,4,4,-60,-12,4,-58,]),'BREAK':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[8,8,-3,-6,-7,-8,-22,-23,-2,-9,-10,8,8,-19,-20,-25,-21,-5,8,8,-24,8,8,-11,-57,8,-13,8,8,-60,-12,8,-58,]),'CONTINUE':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[9,9,-3,-6,-7,-8,-22,-23,-2,-9,-10,9,9,-19,-20,-25,-21,-5,9,9,-24,9,9,-11,-57,9,-13,9,9,-60,-12,9,-58,]),'WHILE':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,90,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[10,10,-3,-6,-7,-8,-22,-23,-2,-9,-10,10,10,-19,-20,-25,113,-21,-5,10,10,-24,10,10,-11,-57,10,-13,10,10,-60,-12,10,-58,]),'FOR':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[11,11,-3,-6,-7,-8,-22,-23,-2,-9,-10,11,11,-19,-20,-25,-21,-5,11,11,-24,11,11,-11,-57,11,-13,11,11,-60,-12,11,-58,]),'DO':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[12,12,-3,-6,-7,-8,-22,-23,-2,-9,-10,12,12,-19,-20,-25,-21,-5,12,12,-24,12,12,-11,-57,12,-13,12,12,-60,-12,12,-58,]),'IDENTIFICADOR':([0,2,3,5,6,7,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,35,37,48,56,57,58,60,61,62,63,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,95,111,112,114,115,116,119,120,121,125,127,128,130,132,133,134,135,136,138,],[13,13,-3,-6,-7,-8,-22,-23,34,-63,-64,-65,-66,-67,-2,40,-9,-10,55,59,13,40,55,40,40,40,55,-14,-15,89,13,-19,-20,40,-25,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-21,-5,13,118,13,-24,13,55,13,-11,40,-57,13,-13,13,13,-60,-12,13,-58,]),'IF':([0,2,3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,131,132,133,134,135,136,138,],[16,16,-3,-6,-7,-8,-22,-23,-2,-9,-10,16,16,-19,-20,-25,-21,-5,16,16,-24,16,16,-11,-57,16,-13,16,16,16,-60,-12,16,-58,]),'TIPO_INT':([0,2,3,5,6,7,14,15,23,25,26,28,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[18,18,-3,-6,-7,-8,-22,-23,-2,-9,-10,18,18,18,-19,-20,-25,-21,-5,18,18,-24,18,18,-11,-57,18,-13,18,18,-60,-12,18,-58,]),'TIPO_FLOAT':([0,2,3,5,6,7,14,15,23,25,26,28,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[19,19,-3,-6,-7,-8,-22,-23,-2,-9,-10,19,19,19,-19,-20,-25,-21,-5,19,19,-24,19,19,-11,-57,19,-13,19,19,-60,-12,19,-58,]),'TIPO_BOOL':([0,2,3,5,6,7,14,15,23,25,26,28,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[20,20,-3,-6,-7,-8,-22,-23,-2,-9,-10,20,20,20,-19,-20,-25,-21,-5,20,20,-24,20,20,-11,-57,20,-13,20,20,-60,-12,20,-58,]),'TIPO_CHAR':([0,2,3,5,6,7,14,15,23,25,26,28,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[21,21,-3,-6,-7,-8,-22,-23,-2,-9,-10,21,21,21,-19,-20,-25,-21,-5,21,21,-24,21,21,-11,-57,21,-13,21,21,-60,-12,21,-58,]),'TIPO_STR':([0,2,3,5,6,7,14,15,23,25,26,28,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,138,],[22,22,-3,-6,-7,-8,-22,-23,-2,-9,-10,22,22,22,-19,-20,-25,-21,-5,22,22,-24,22,22,-11,-57,22,-13,22,22,-60,-12,22,-58,]),'$end':([0,1,2,3,5,6,7,14,15,23,25,26,62,63,67,91,95,115,121,127,130,134,135,138,],[-4,0,-1,-3,-6,-7,-8,-22,-23,-2,-9,-10,-19,-20,-25,-21,-5,-24,-11,-57,-13,-60,-12,-58,]),'LLAVE_DER':([3,5,6,7,14,15,23,25,26,29,61,62,63,67,91,95,111,114,115,116,120,121,127,128,130,132,133,134,135,136,137,138,],[-3,-6,-7,-8,-22,-23,-2,-9,-10,-4,90,-19,-20,-25,-21,-5,-4,-4,-24,121,127,-11,-57,-4,-13,135,-4,-60,-12,-59,138,-58,]),'PARENTESIS_IZQ':([4,10,11,16,24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,113,115,119,125,],[24,27,28,33,35,35,35,35,35,35,35,35,-14,-15,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-21,119,-24,35,35,]),'PUNTO_Y_COMA':([8,9,30,31,34,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,64,69,85,86,88,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,],[25,26,62,63,67,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-61,-62,-46,-47,-48,91,95,-31,-44,112,115,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,]),'LLAVE_IZQ':([12,87,92,122,131,],[29,111,114,128,133,]),'INCREMENTO':([13,118,],[30,123,]),'DECREMENTO':([13,118,],[31,124,]),'IGUAL':([13,34,59,89,118,],[32,66,32,66,125,]),'MENOS':([24,27,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,91,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,119,125,129,],[37,37,37,37,37,71,37,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,37,-34,-33,71,-46,-47,-35,37,-14,-15,71,37,71,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,71,-44,-21,71,-56,-26,-27,71,71,71,71,-36,-37,-38,-39,-40,-41,-42,71,-45,-24,37,37,71,]),'ENTERO':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[41,41,41,41,41,41,41,41,-14,-15,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-21,-24,41,41,]),'FLOTANTE':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[42,42,42,42,42,42,42,42,-14,-15,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-21,-24,42,42,]),'TRUE':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[43,53,43,53,43,43,43,53,-14,-15,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-21,-24,53,43,]),'FALSE':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[44,54,44,54,44,44,44,54,-14,-15,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-21,-24,54,44,]),'CADENA':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[45,45,45,45,45,45,45,45,-14,-15,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-21,-24,45,45,]),'CARACTER':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[46,46,46,46,46,46,46,46,-14,-15,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-21,-24,46,46,]),'NOT':([24,27,32,33,35,37,48,56,57,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,115,119,125,],[48,48,48,48,48,48,48,48,-14,-15,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-21,-24,48,48,]),'PARENTESIS_DER':([36,38,39,40,41,42,43,44,45,46,47,49,50,51,53,54,55,65,68,85,86,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,117,123,124,126,129,],[69,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,87,-61,-62,-46,-47,-48,92,94,-31,-44,-56,-26,-27,-28,-29,-30,-32,-36,-37,-38,-39,-40,-41,-42,-43,-45,122,-16,-17,130,-18,]),'MAS':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[70,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,70,-46,-47,-35,70,70,70,-44,70,-56,-26,-27,70,70,70,70,-36,-37,-38,-39,-40,-41,-42,70,-45,70,]),'MULTIPLICACION':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[72,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,72,-46,-47,-35,72,72,72,-44,72,-56,-26,-27,-28,-29,72,72,-36,-37,-38,-39,-40,-41,-42,72,-45,72,]),'DIVISION':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[73,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,73,-46,-47,-35,73,73,73,-44,73,-56,-26,-27,-28,-29,73,73,-36,-37,-38,-39,-40,-41,-42,73,-45,73,]),'POTENCIA':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[74,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,74,-46,-47,-35,74,74,74,-44,74,-56,-26,-27,-28,-29,None,74,-36,-37,-38,-39,-40,-41,-42,74,-45,74,]),'MODULO':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[75,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,75,-46,-47,-35,75,75,-31,-44,75,-56,-26,-27,-28,-29,-30,75,-36,-37,-38,-39,-40,-41,-42,75,-45,75,]),'IGUALQUE':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[76,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,76,-46,-47,-35,76,76,76,-44,76,-56,76,76,76,76,76,76,-36,-37,-38,-39,-40,-41,-42,76,-45,76,]),'DIFERENTEQUE':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[77,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,77,-46,-47,-35,77,77,77,-44,77,-56,77,77,77,77,77,77,-36,-37,-38,-39,-40,-41,-42,77,-45,77,]),'MAYORQUE':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[78,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,78,-46,-47,-35,78,78,78,-44,78,-56,78,78,78,78,78,78,78,78,-38,-39,-40,-41,-42,78,-45,78,]),'MAYORIGUALQUE':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[79,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,79,-46,-47,-35,79,79,79,-44,79,-56,79,79,79,79,79,79,79,79,79,-39,79,-41,-42,79,-45,79,]),'MENORQUE':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[80,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,80,-46,-47,-35,80,80,80,-44,80,-56,80,80,80,80,80,80,80,80,-38,-39,-40,-41,-42,80,-45,80,]),'MENORIGUALQUE':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[81,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,81,-46,-47,-35,81,81,81,-44,81,-56,81,81,81,81,81,81,81,81,81,-39,81,-41,-42,81,-45,81,]),'AND':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[82,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,82,-46,-47,-35,82,82,82,82,82,-56,82,82,82,82,82,82,82,82,82,82,82,82,-42,82,-45,82,]),'OR':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[83,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,83,-46,-47,-35,83,83,-31,-44,83,-56,-26,-27,-28,-29,-30,83,-36,-37,-38,-39,-40,-41,-42,83,-45,83,]),'XOR':([36,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,64,68,85,86,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,129,],[84,-33,-34,-35,-49,-50,-46,-47,-53,-54,-55,-34,-33,84,-46,-47,-35,84,84,84,84,84,-56,84,84,84,84,84,84,84,84,84,84,84,84,-42,84,-45,84,]),'ELSE':([127,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([0,29,111,114,128,133,],[2,61,116,120,132,136,]),'sentencia':([0,2,29,61,111,114,116,120,128,132,133,136,],[3,23,3,23,3,3,23,23,3,23,3,23,]),'declaracion':([0,2,29,61,111,114,116,120,128,132,133,136,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,28,29,61,111,114,116,120,128,132,133,136,],[6,6,57,6,6,6,6,6,6,6,6,6,6,]),'sentenciaIf':([0,2,29,61,111,114,116,120,128,131,132,133,136,],[7,7,7,7,7,7,7,7,7,134,7,7,7,]),'declaracion_valor':([0,2,28,29,61,111,114,116,120,128,132,133,136,],[14,14,58,14,14,14,14,14,14,14,14,14,14,]),'declaracion_sin_valor':([0,2,29,61,111,114,116,120,128,132,133,136,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'tipo':([0,2,28,29,61,111,114,116,120,128,132,133,136,],[17,17,60,17,17,17,17,17,17,17,17,17,17,]),'expresion':([24,27,32,33,35,37,48,56,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,119,125,],[36,52,64,52,68,85,86,52,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,52,129,]),'relacional':([24,27,32,33,35,37,48,56,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,119,125,],[38,51,38,51,38,38,38,51,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,51,38,]),'logica':([24,27,32,33,35,37,48,56,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,119,125,],[39,50,39,50,39,39,39,50,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,50,39,]),'expresion_agrupada':([24,27,32,33,35,37,48,56,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,119,125,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'condicion':([27,33,56,119,],[49,65,88,126,]),'inicio_for':([28,],[56,]),'actualizacion':([112,],[117,]),'selse':([133,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencias','programa',1,'p_programa','parser.py',53),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_lista_sentencias','parser.py',57),
  ('sentencias -> sentencia','sentencias',1,'p_una_sentencia','parser.py',62),
  ('sentencias -> <empty>','sentencias',0,'p_sentencia_empty','parser.py',67),
  ('sentencia -> PRINT PARENTESIS_IZQ expresion PARENTESIS_DER PUNTO_Y_COMA','sentencia',5,'p_sentencia_print','parser.py',71),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia_declaracion','parser.py',75),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia_asignacion','parser.py',79),
  ('sentencia -> sentenciaIf','sentencia',1,'p_sentencia_if','parser.py',83),
  ('sentencia -> BREAK PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_break','parser.py',87),
  ('sentencia -> CONTINUE PUNTO_Y_COMA','sentencia',2,'p_sentencia_bucle_continue','parser.py',92),
  ('sentencia -> WHILE PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',7,'p_sentencia_while','parser.py',97),
  ('sentencia -> FOR PARENTESIS_IZQ inicio_for condicion PUNTO_Y_COMA actualizacion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia',10,'p_sentencia_for','parser.py',102),
  ('sentencia -> DO LLAVE_IZQ sentencias LLAVE_DER WHILE PARENTESIS_IZQ condicion PARENTESIS_DER','sentencia',8,'p_sentencia_do_while','parser.py',107),
  ('inicio_for -> asignacion','inicio_for',1,'p_inicio_for_asignacion','parser.py',112),
  ('inicio_for -> declaracion_valor','inicio_for',1,'p_inicio_for_declaracion','parser.py',117),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacion_incremento','parser.py',121),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacion_decremento','parser.py',126),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacion_asignacion','parser.py',131),
  ('sentencia -> IDENTIFICADOR INCREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_incremento','parser.py',136),
  ('sentencia -> IDENTIFICADOR DECREMENTO PUNTO_Y_COMA','sentencia',3,'p_sentencia_decremento','parser.py',141),
  ('asignacion -> IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','asignacion',4,'p_asignacion','parser.py',146),
  ('declaracion -> declaracion_valor','declaracion',1,'p_declaracion_init','parser.py',151),
  ('declaracion -> declaracion_sin_valor','declaracion',1,'p_declaracion_no_init','parser.py',155),
  ('declaracion_valor -> tipo IDENTIFICADOR IGUAL expresion PUNTO_Y_COMA','declaracion_valor',5,'p_declaracion_op_igual','parser.py',159),
  ('declaracion_sin_valor -> tipo IDENTIFICADOR PUNTO_Y_COMA','declaracion_sin_valor',3,'p_declaracion_op_pto_y_coma','parser.py',163),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_suma','parser.py',167),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_resta','parser.py',172),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_multiplicacion','parser.py',177),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_division','parser.py',182),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_potencia','parser.py',187),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_menos_int','parser.py',192),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_modulo','parser.py',197),
  ('expresion -> relacional','expresion',1,'p_expresion_relacionales','parser.py',202),
  ('expresion -> logica','expresion',1,'p_expresion_logica','parser.py',206),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','parser.py',210),
  ('relacional -> expresion IGUALQUE expresion','relacional',3,'p_relacional_igualque','parser.py',215),
  ('relacional -> expresion DIFERENTEQUE expresion','relacional',3,'p_relacional_diferenteque','parser.py',220),
  ('relacional -> expresion MAYORQUE expresion','relacional',3,'p_relacional_mayorque','parser.py',225),
  ('relacional -> expresion MAYORIGUALQUE expresion','relacional',3,'p_relacional_mayorigualque','parser.py',230),
  ('relacional -> expresion MENORQUE expresion','relacional',3,'p_relacional_menorque','parser.py',235),
  ('relacional -> expresion MENORIGUALQUE expresion','relacional',3,'p_relacional_menorigualque','parser.py',240),
  ('logica -> expresion AND expresion','logica',3,'p_logica_and','parser.py',245),
  ('logica -> expresion OR expresion','logica',3,'p_logica_or','parser.py',250),
  ('logica -> NOT expresion','logica',2,'p_logica_not','parser.py',255),
  ('logica -> expresion XOR expresion','logica',3,'p_logica_xor','parser.py',260),
  ('logica -> TRUE','logica',1,'p_logica_true','parser.py',265),
  ('logica -> FALSE','logica',1,'p_logica_false','parser.py',270),
  ('logica -> IDENTIFICADOR','logica',1,'p_logica_identificador','parser.py',275),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','parser.py',280),
  ('expresion -> FLOTANTE','expresion',1,'p_expresion_flotante','parser.py',285),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','parser.py',290),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','parser.py',294),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','parser.py',298),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','parser.py',302),
  ('expresion -> expresion_agrupada','expresion',1,'p_expresion_agrupada_exp','parser.py',307),
  ('expresion_agrupada -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion_agrupada',3,'p_expresion_agrupada','parser.py',311),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER','sentenciaIf',7,'p_sentencia_if_simple','parser.py',315),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ selse LLAVE_DER','sentenciaIf',11,'p_sentencia_if_else','parser.py',319),
  ('selse -> sentencias','selse',1,'p_sentencia_else','parser.py',324),
  ('sentenciaIf -> IF PARENTESIS_IZQ condicion PARENTESIS_DER LLAVE_IZQ sentencias LLAVE_DER ELSE sentenciaIf','sentenciaIf',9,'p_sentencia_if_else_if','parser.py',328),
  ('condicion -> logica','condicion',1,'p_condicion_logica','parser.py',332),
  ('condicion -> relacional','condicion',1,'p_condicion_relacional','parser.py',337),
  ('tipo -> TIPO_INT','tipo',1,'p_tipo_int','parser.py',342),
  ('tipo -> TIPO_FLOAT','tipo',1,'p_tipo_float','parser.py',346),
  ('tipo -> TIPO_BOOL','tipo',1,'p_tipo_bool','parser.py',350),
  ('tipo -> TIPO_CHAR','tipo',1,'p_tipo_char','parser.py',354),
  ('tipo -> TIPO_STR','tipo',1,'p_tipo_str','parser.py',358),
]
